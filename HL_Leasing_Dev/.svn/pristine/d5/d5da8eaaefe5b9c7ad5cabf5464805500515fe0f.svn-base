<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: gaoyang 
    $Date: 2014-10-27 上午09:19:03  
    $Revision: 1.0  
    $Purpose: 
-->
<a:screen xmlns:a="http://www.aurora-framework.org/application" customizationEnabled="true" dynamiccreateenabled="true" trace="true">
     <a:init-procedure>
        <a:model-query fetchAll="true" model="prj.PRJ500D.sys_date" rootPath="sysdate"/>
    </a:init-procedure>
    <a:view>
        <a:link id="attachment_uploadFile_link" url="${/request/@context_path}/uploadFile.screen"/>
        <a:link id="attachment_downloadFile_link" url="${/request/@context_path}/downloadFile.screen"/>
        <a:link id="hls_change_history_link" url="${/request/@context_path}/modules/cont/CON732/hls_ccr_modify_histiory_query.screen"/>
        <a:link id="${/parameter/@layout_code}${/parameter/@pre_layout}get_atch_download_link" url="${/request/@context_path}/modules/batch_download/lease_atm_batch_dl.svc"/>
        <script src="${/request/@context_path}/javascripts/lightbox.js"/>
        <script><![CDATA[
            Ext.ux.Lightbox.register('a[ref=img]', true);
            //add by liukang
            //应张文要求在审批页面增加附件查看按钮
            //alert(1);
            //保存submitsuccess调用
            //工作流驳回按钮校验
            zjwfl5110_ApproveChecker_add('zjwfl5110_submit', function(type) {
                var root_ds = $('${/parameter/@layout_code}_virtual_ds');
                if (type == 'view_page') {
                    if (root_ds.validate()) {
                        //提交先保存
                        root_ds.submit();
                        return true;
                    } else {
                        return false;
                    }
                }
            
                //add by wdd 20180418 for 驳回意见
                if (type == 'jump') {
                    var hl_prj_overrule_id = get_dsid_by_basetable(window['${/parameter/@layout_code}_layoutDataSetList'], 'hl_prj_overrule_pro_change');
                    var hl_prj_overrule_record = $(hl_prj_overrule_id).getAll();
                    var length = hl_prj_overrule_record.length;
            
                    if (length) {
                        for (var i = 0;i < length;i++) {
                            var line_record = hl_prj_overrule_record[i];
                            if (line_record.isNew) {
                                Aurora.showMessage('提示', '存在新增驳回意见，请保存！');
                                return false;
                            }
                        }
                    }
                }
                return true;
            });
            //end
            //加载时调用(grid,table,gridBox)
            window['${/parameter/@bp_seq}${/parameter/@layout_code}_on_layout_dynamic_grid_load'] = function(ds, record, config_records, bp_seq) {
                //add by wdd
                var hl_prj_overrule_con_pro_id = get_dsid_by_basetable(window['${/parameter/@layout_code}_layoutDataSetList'], 'hl_prj_overrule_pro_change');
                if (ds.id == hl_prj_overrule_con_pro_id) {
                    hl_prj_overrule_con_grid_length = $(hl_prj_overrule_con_pro_id).getAll().length;
                    var hl_prj_overrule_con_record = $(hl_prj_overrule_con_pro_id).getAll();
                    if (hl_prj_overrule_con_record.length) {
                        for (var i = 0;i < hl_prj_overrule_con_record.length;i++) {
                            var line_record = hl_prj_overrule_con_record[i];
                            var return_person = line_record.get('return_person');
                            if (return_person != ${/session/@user_id}) {
                                line_record.getField('return_reason').setReadOnly(true);
                            }
                        }
                    }
                }
                //end by wdd
            };
            window['${/parameter/@layout_code}_on_layout_dynamic_submitsuccess'] = function(ds, record, res) {
                window['${/parameter/@layout_code}_lock_layout_dynamic_window']();
                var ds_id = get_dsid_by_basetable(window['${/parameter/@layout_code}_layoutDataSetList'], 'con_contract');
                var item_ds_id = get_dsid_by_basetable(window['${/parameter/@layout_code}_layoutDataSetList'], 'con_contract_lease_item');
            	$(ds_id).query();
            	$(item_ds_id).query();
                if (ds_id) {
                    record = $(ds_id).getAt(0);
                    var contract_id = record.get('contract_id');
                    // alert(contract_id);
                    var lease_item_ds_id = get_dsid_by_basetable(window['${/parameter/@layout_code}_layoutDataSetList'], 'con_contract_lease_item');
                    var product_plan_id = $(lease_item_ds_id).getAt(0).get('product_plan_id');
                    var ln_ds_id = get_dsid_by_basetable(window['${/parameter/@layout_code}_layoutDataSetList'], 'hls_fin_calculator_ln');
                    var quotation_ds_id = get_dsid_by_basetable(window['${/parameter/@layout_code}_layoutDataSetList'], 'prj_quotation');
                    $(ln_ds_id).query();
                    $(quotation_ds_id).query();
                }
                window['${/parameter/@layout_code}_unlock_layout_dynamic_window']();
            };
            
            
            // window['${/parameter/@layout_code}_upload_layout_dynamic_click'] = function() {
                // var header_id = '${/parameter/@change_req_id}';
                // var url = '';
                // if ('${/parameter/@attachment_flag}' == 'Y') {
                    // url = $('attachment_uploadFile_link').getUrl() + '?table_name=CON_CONTRACT&header_id=' + header_id;
                // } else {
                    // url = $('attachment_downloadFile_link').getUrl() + '?table_name=CON_CONTRACT&header_id=' + header_id;
                // }
                // var win = new Aurora.Window({
                    // url: url,
                    // title: '附件查看',
                    // id: 'approve_downloadFile_id',
                    // width: 850,
                    // height: 400
                // });
                // win.on('close', function() {});
            // };
            
             window['${/parameter/@layout_code}_upload_layout_dynamic_click'] = function(ds_id, id, name, query_only) {
                 var record = $(ds_id).findById(id);
                if (record.get('check_id')) {
                    var url;
                   if ('${/parameter/@attachment_flag}' == 'Y') {
                        url = $('attachment_uploadFile_link').getUrl() + '?table_name=PRJ_CDD_ITEM_CHECK&header_id=' + record.get('check_id');
                    } else {
                        url = $('attachment_downloadFile_link').getUrl() + '?table_name=PRJ_CDD_ITEM_CHECK&header_id=' + record.get('check_id');
                    }
                    var win = new Aurora.Window({
                        url: url,
                        title: '${l:HLS.SUPPORTING_DOCUMENT}',
                        id: '${/parameter/@layout_code}${/parameter/@tree_code}_prj500_cdd_uploadFile_screen_id',
                        width: 850,
                        height: 400
                    });
            
                    win.on('close', function() {
                        record.ds.query();
                    });
                } else {
                    Aurora.showMessage('${l:HLS.PROMPT}', '请先保存!');
                }
            };
            
            zjwfl5110_ApproveChecker_add('zjwfl5110_submit', function(type) {
                var root_ds = $('${/parameter/@layout_code}_virtual_ds');
                if (type == 'view_page') {
                    if (root_ds.validate()) {
                        //提交先保存
                        root_ds.submit();
                        return true;
                    } else {
                        return false;
                    }
                } else {
                    return true;
                }
            });
            
            //变更信息查看
            window['${/parameter/@layout_code}_user_button3_layout_dynamic_click'] = function() {
                var con_id = get_dsid_by_basetable(window['${/parameter/@layout_code}_layoutDataSetList'], 'con_contract_lease_item');
                var record = $(con_id).getAt(0);
                new Aurora.Window({
                    id: 'hls_standard_history_link_window',
                    url: $('hls_change_history_link').getUrl(),
                    params: {
                        contract_id: record.get('contract_id')
                    },
                    width: 1250,
                    height: 180,
                    draggable: true
                });
            };
            
            window['${/parameter/@bp_seq}${/parameter/@layout_code}_on_layout_dynamic_form_add_and_load'] = function(ds, record, config_records, bp_seq) {
                var lease_item_ds_id = get_dsid_by_basetable(window['${/parameter/@layout_code}_layoutDataSetList'], 'con_contract_lease_item');
                var con_contract_ds_id = get_dsid_by_basetable(window['${/parameter/@layout_code}_layoutDataSetList'], 'con_contract');
                if ('${/parameter/@function_usage}' != 'QUERY' && '${/parameter/@edit_flag}' != 'N') {
                    if (ds.id == con_contract_ds_id) {
                        if (record.get('direct_debit_bank_id')) {
                            if (record.get('withhold_way') == 'CUP') {
                                record.getField('dd_remark').setRequired(true);
                            } else {
                                record.getField('dd_remark').setRequired(false);
                            }
                        }
                    }
                    if (ds.id == lease_item_ds_id) {
                        record.getField('product_plan_id_n').setLovPara('series_id', record.get('series_id'));
                        record.getField('product_plan_id_n').setLovPara('contract_id', ${/parameter/@contract_id});
            
                        if (record.get('lease_times')) {
                            record.getField('lease_times').setReadOnly(true);
                        } else {
                            record.getField('lease_times').setReadOnly(false);
                        }
                        if (record.get('license_fee_flag') == 'N') {
                            record.getField('plate_price').setReadOnly(true);
                            record.getField('plate_price').setRequired(false);
                            record.set('plate_price', '');
                        } else {
                            record.getField('plate_price').setReadOnly(false);
                            record.getField('plate_price').setRequired(true);
                        }
                        if (record.get('insurance_flag') == 'N') {
                            record.getField('insurance_amount').setReadOnly(true);
                            record.getField('insurance_purchase_n').setReadOnly(true);
                            record.getField('insurance_amount').setRequired(false);
                            record.getField('insurance_purchase_n').setRequired(false);
                            record.set('insurance_purchase_n', '其他');
                            record.set('insurance_purchase', 'OTHER');
                            record.set('insurance_amount', '');
                        } else {
                            record.getField('insurance_amount').setReadOnly(false);
                            record.getField('insurance_purchase_n').setReadOnly(false);
                            record.getField('insurance_amount').setRequired(true);
                            record.getField('insurance_purchase_n').setRequired(true);
                        }
                        if (record.get('purchase_tax_flag') == 'N') {
                            record.getField('purchase_tax').setReadOnly(true);
                            record.getField('purchase_tax').setRequired(false);
                            record.set('purchase_tax', '');
                        } else {
                            record.getField('purchase_tax').setReadOnly(false);
                            record.getField('purchase_tax').setRequired(true);
                        }
                        if (record.get('deposit_ratio')) {
                            if (record.get('deposit_ratio') != 0) {
                                record.getField('deposit_deduction_n').setReadOnly(false);
                                record.set('deposit_deduction_n', '最后几期租金');
                                record.set('deposit_deduction', 'K');
                            } else {
                                record.getField('deposit_deduction_n').setReadOnly(true);
                                record.set('deposit_deduction_n', '');
                                record.set('deposit_deduction', '');
                            }
                            var finance_amount = record.get('finance_amount') || 0;
                            var deposit = parseInt(finance_amount) * parseFloat(record.get('deposit_ratio'));
                            record.set('deposit', deposit);
                        } else {
                            record.getField('deposit_deduction_n').setReadOnly(true);
                            record.set('deposit_deduction_n', '');
                            record.set('deposit_deduction', '');
            
                            var finance_amount = record.get('finance_amount') || 0;
                            var deposit = parseInt(finance_amount) * parseFloat(record.get('deposit_ratio'));
                            record.set('deposit', deposit);
                        }
                    }
                } else {
                    if (ds.id == lease_item_ds_id) {
                        if (record.get('deposit_ratio')) {
                            if (record.get('deposit_ratio') != 0) {
                                record.getField('deposit_deduction_n').setReadOnly(true);
                                record.set('deposit_deduction_n', '最后几期租金');
                                record.set('deposit_deduction', 'K');
                            } else {
                                record.getField('deposit_deduction_n').setReadOnly(true);
                                record.set('deposit_deduction_n', '');
                                record.set('deposit_deduction', '');
                            }
                            var finance_amount = record.get('finance_amount') || 0;
                            var deposit = parseInt(finance_amount) * parseFloat(record.get('deposit_ratio'));
                            record.set('deposit', deposit);
                        } else {
                            record.getField('deposit_deduction_n').setReadOnly(true);
                            record.set('deposit_deduction_n', '');
                            record.set('deposit_deduction', '');
            
                            var finance_amount = record.get('finance_amount') || 0;
                            var deposit = parseInt(finance_amount) * parseFloat(record.get('deposit_ratio'));
                            record.set('deposit', deposit);
                        }
                    }
                }
            };
            
            window['${/parameter/@bp_seq}${/parameter/@layout_code}_on_layout_dynamic_update'] = function(ds, record, name, value, old_value, bp_seq) {
                var ds_bp_id = get_dsid_by_tabcode_basetable(window['${/parameter/@layout_code}_layoutDataSetList'], 'F_BP', 'con_contract_bp');
                //var ds_sp_id = get_dsid_by_tabcode_basetable(window['${/parameter/@layout_code}_layoutDataSetList'], 'F_SP', 'con_contract_bp');
                var ds_dp_id = get_dsid_by_tabcode_basetable(window['${/parameter/@layout_code}_layoutDataSetList'], 'F_DB', 'con_contract_bp');
                var bp_info_ds_id = get_dsid_by_basetable(window['${/parameter/@layout_code}_layoutDataSetList'], 'con_contract_bp');
                var lease_item_ds_id = get_dsid_by_basetable(window['${/parameter/@layout_code}_layoutDataSetList'], 'con_contract_lease_item');
                var con_contract_ds_id = get_dsid_by_basetable(window['${/parameter/@layout_code}_layoutDataSetList'], 'con_contract');
                if (ds.id == con_contract_ds_id) { /* add by Harry 9952 2016/1/11 */
                    if (name == 'direct_debit_bank_id') {
                        if (record.get('withhold_way') == 'CUP') {
                            record.getField('dd_remark').setRequired(true);
                        } else {
                            record.getField('dd_remark').setRequired(false);
                        }
            
                    }
                }
                if (ds.id == lease_item_ds_id) {
                    if (name == 'series_id_n') {
                        record.getField('product_plan_id_n').setLovPara('series_id', record.get('series_id'));
                        record.getField('product_plan_id_n').setLovPara('contract_id', ${/parameter/@contract_id});
            
                        record.set('model_id', '');
                        record.set('model_id_n', '');
                        record.set('product_plan_id', '');
                        record.set('product_plan_id_n', '');
                        record.set('color_of_apprearance', '');
                        record.set('color_of_apprearance_n', '');
                        record.set('item_frame_number', '');
                        record.set('item_frame_number_n', '');
                        record.set('guide_price', '');
                    }
                    if (name == 'invoice_price') {
                        record.set('invoice_price', record.get('invoice_price'));
                    }
                    if (name == 'brand_id_n') {
                        record.set('series_id', '');
                        record.set('series_id_n', '');
                        record.set('model_id', '');
                        record.set('model_id_n', '');
                        record.set('product_plan_id', '');
                        record.set('product_plan_id_n', '');
                        record.set('platform_id', '');
                        record.set('platform_id_n', '');
                        record.set('color_of_apprearance', '');
                        record.set('color_of_apprearance_n', '');
                        record.set('item_frame_number', '');
                        record.set('item_frame_number_n', '');
                        record.set('guide_price', '');
                    }
                    if (name == 'product_plan_id') {
                        var down_payment_ratio = record.get('down_payment_ratio');
                        var finance_amount = record.get('finance_amount');
                        record.set('down_payment', '');
                        record.set('discount', '');
                        if (down_payment_ratio) {
                            record.set('down_payment_ratio', down_payment_ratio);
                        }
                        if (finance_amount) {
                            record.set('finance_amount', finance_amount);
                        }
                    }
                    if (name == 'lease_times') {
                        var min_dp_ratio = record.get('min_dp_ratio');
                        var min_dp_ratio_visit = record.get('min_dp_ratio_visit');
                        var times_limit = record.get('times_limit');
                        var times_limit_visit = record.get('times_limit_visit');
                        var finance_amt_max = record.get('finance_amt_max');
                        var finance_amt_max_visit = record.get('finance_amt_max_visit');
                        var finance_amount = record.get('finance_amount');
                        var down_payment_ratio = record.get('down_payment_ratio');
                        var lease_times_temp = record.get('lease_times_temp');
                        if (!lease_times_temp) {
                            record.getField('lease_times').setReadOnly(false);
                        } else {
                            record.getField('lease_times').setReadOnly(true);
                        }
                        if (Ext.isEmpty(times_limit) && Ext.isEmpty(min_dp_ratio) && Ext.isEmpty(finance_amt_max)) {
                            record.set('gps_install_flag', 'Y');
                            record.set('gps_install_flag_n', '是');
                        } else {
                            if (Ext.isEmpty(times_limit)) {
                                times_limit = value;
                            }
                            if (Ext.isEmpty(min_dp_ratio)) {
                                min_dp_ratio = 0;
                            }
                            if (Ext.isEmpty(finance_amt_max)) {
                                finance_amt_max = 999999999999;
                            }
                            if (value == times_limit && down_payment_ratio >= min_dp_ratio && finance_amount <= finance_amt_max) {
                                record.set('gps_install_flag', 'N');
                                record.set('gps_install_flag_n', '否');
                            } else {
                                record.set('gps_install_flag', 'Y');
                                record.set('gps_install_flag_n', '是');
                            }
                        }
                        if (Ext.isEmpty(times_limit_visit) && Ext.isEmpty(min_dp_ratio_visit) && Ext.isEmpty(finance_amt_max_visit)) {
                            record.set('visit_flag', 'Y');
                            record.set('visit_flag_n', '是');
                        } else {
                            if (Ext.isEmpty(times_limit_visit)) {
                                times_limit_visit = value;
                            }
                            if (Ext.isEmpty(min_dp_ratio_visit)) {
                                min_dp_ratio_visit = 0;
                            }
                            if (Ext.isEmpty(finance_amt_max_visit)) {
                                finance_amt_max_visit = 999999999999;
                            }
                            if (value == times_limit_visit && down_payment_ratio >= min_dp_ratio_visit && finance_amount <= finance_amt_max_visit) {
                                record.set('visit_flag', 'N');
                                record.set('visit_flag_n', '否');
                            } else {
                                record.set('visit_flag', 'Y');
                                record.set('visit_flag_n', '是');
                            }
                        }
                    }
            
                    if (name == 'down_payment_ratio') {
                        var min_dp_ratio = record.get('min_dp_ratio');
                        var min_dp_ratio_visit = record.get('min_dp_ratio_visit');
                        var times_limit = record.get('times_limit');
                        var times_limit_visit = record.get('times_limit_visit');
                        var finance_amt_max = record.get('finance_amt_max');
                        var finance_amt_max_visit = record.get('finance_amt_max_visit');
                        var finance_amount = record.get('finance_amount');
                        var lease_times = record.get('lease_times');
                        if (Ext.isEmpty(times_limit) && Ext.isEmpty(min_dp_ratio) && Ext.isEmpty(finance_amt_max)) {
                            record.set('gps_install_flag', 'Y');
                            record.set('gps_install_flag_n', '是');
                        } else {
                            if (Ext.isEmpty(times_limit)) {
                                times_limit = lease_times;
                            }
                            if (Ext.isEmpty(min_dp_ratio)) {
                                min_dp_ratio = 0;
                            }
                            if (Ext.isEmpty(finance_amt_max)) {
                                finance_amt_max = 999999999999;
                            }
                            if (lease_times == times_limit && value >= min_dp_ratio && finance_amount <= finance_amt_max) {
                                record.set('gps_install_flag', 'N');
                                record.set('gps_install_flag_n', '否');
                            } else {
                                record.set('gps_install_flag', 'Y');
                                record.set('gps_install_flag_n', '是');
                            }
                        }
                        if (Ext.isEmpty(times_limit_visit) && Ext.isEmpty(min_dp_ratio_visit) && Ext.isEmpty(finance_amt_max_visit)) {
                            record.set('visit_flag', 'Y');
                            record.set('visit_flag_n', '是');
                        } else {
                            if (Ext.isEmpty(times_limit_visit)) {
                                times_limit_visit = lease_times;
                            }
                            if (Ext.isEmpty(min_dp_ratio_visit)) {
                                min_dp_ratio_visit = 0;
                            }
                            if (Ext.isEmpty(finance_amt_max_visit)) {
                                finance_amt_max_visit = 999999999999;
                            }
                            if (lease_times == times_limit_visit && value >= min_dp_ratio_visit && finance_amount <= finance_amt_max_visit) {
                                record.set('visit_flag', 'N');
                                record.set('visit_flag_n', '否');
                            } else {
                                record.set('visit_flag', 'Y');
                                record.set('visit_flag_n', '是');
                            }
                        }
                    }
                    if (name == 'deposit_ratio') {
                        if (record.get('deposit_ratio') != 0) {
                            record.getField('deposit_deduction_n').setReadOnly(false);
                            record.set('deposit_deduction_n', '最后几期租金');
                            record.set('deposit_deduction', 'K');
                        } else {
                            record.getField('deposit_deduction_n').setReadOnly(true);
                            record.set('deposit_deduction_n', '');
                            record.set('deposit_deduction', '');
                        }
                        var finance_amount = record.get('finance_amount') || 0;
                        var deposit = parseInt(finance_amount) * parseFloat(value);
                        record.set('deposit', deposit);
                    }
                    if (name == 'down_payment') {
                        var invoice_price = record.get('invoice_price') || 0;
                        var insurance_amount = record.get('insurance_amount') || 0;
                        var purchase_tax = record.get('purchase_tax') || 0;
                        var plate_price = record.get('plate_price') || 0;
                        var down_payment_ratio = parseInt(value) / (parseInt(invoice_price) + parseInt(insurance_amount) + parseInt(purchase_tax) + parseInt(plate_price));
                        var finance_amount = parseInt(invoice_price) + parseInt(insurance_amount) + parseInt(purchase_tax) + parseInt(plate_price) - parseInt(value);
                        record.set('finance_amount', finance_amount);
                        record.set('down_payment_ratio', down_payment_ratio);
                    }
                    if (name == 'invoice_price') {
                        var down_payment = record.get('down_payment') || 0;
                        var insurance_amount = record.get('insurance_amount') || 0;
                        var purchase_tax = record.get('purchase_tax') || 0;
                        var plate_price = record.get('plate_price') || 0;
                        var balloon_ratio = record.get('balloon_ratio') || 0;
                        var balloon = parseFloat(balloon_ratio) * (parseInt(value) + parseInt(insurance_amount) + parseInt(purchase_tax) + parseInt(plate_price));
                        record.set('balloon', balloon);
                        if (down_payment) {
                            var finance_amount = parseInt(value) + parseInt(insurance_amount) + parseInt(purchase_tax) + parseInt(plate_price) - parseInt(down_payment);
                            record.set('finance_amount', finance_amount);
                            var down_payment_ratio = parseInt(down_payment) / (parseInt(value) + parseInt(insurance_amount) + parseInt(purchase_tax) + parseInt(plate_price));
                            record.set('down_payment_ratio', down_payment_ratio);
                        }
                    }
                    if (name == 'finance_amount') {
                        var deposit_ratio = record.get('deposit_ratio') || 0;
                        var deposit = parseFloat(deposit_ratio) * parseInt(value);
                        var lease_charge_ratio = record.get('lease_charge_ratio') || 0;
                        var lease_charge = parseFloat(lease_charge_ratio) * parseInt(value);
                        record.set('deposit', deposit);
                        record.set('lease_charge', lease_charge);
                        var down_payment_ratio = parseInt(value) / (parseInt(invoice_price) + parseInt(insurance_amount) + parseInt(purchase_tax) + parseInt(plate_price));
                    }
                    if (name == 'balloon_ratio') {
                        var invoice_price = record.get('invoice_price') || 0;
                        var insurance_amount = record.get('insurance_amount') || 0;
                        var purchase_tax = record.get('purchase_tax') || 0;
                        var plate_price = record.get('plate_price') || 0;
                        var balloon = parseFloat(value) * (parseInt(invoice_price) + parseInt(insurance_amount) + parseInt(purchase_tax) + parseInt(plate_price));
                        record.set('balloon', balloon);
                    }
                    if (name == 'license_fee_flag') {
                        if (value == 'N') {
                            record.getField('plate_price').setReadOnly(true);
                            record.getField('plate_price').setRequired(false);
                            record.set('plate_price', '');
                        } else {
                            record.getField('plate_price').setReadOnly(false);
                            record.getField('plate_price').setRequired(true);
                        }
                    }
                    if (name == 'insurance_flag') {
                        if (value == 'N') {
                            record.getField('insurance_amount').setReadOnly(true);
                            record.getField('insurance_purchase_n').setReadOnly(true);
                            record.getField('insurance_amount').setRequired(false);
                            record.getField('insurance_purchase_n').setRequired(false);
                            record.set('insurance_purchase_n', '其他');
                            record.set('insurance_purchase', 'OTHER');
                            record.set('insurance_amount', '');
                        } else {
                            record.getField('insurance_amount').setReadOnly(false);
                            record.getField('insurance_purchase_n').setReadOnly(false);
                            record.getField('insurance_amount').setRequired(true);
                            record.getField('insurance_purchase_n').setRequired(true);
                        }
                    }
                    if (name == 'purchase_tax_flag') {
                        if (value == 'N') {
                            record.getField('purchase_tax').setReadOnly(true);
                            record.getField('purchase_tax').setRequired(false);
                            record.set('purchase_tax', '');
                        } else {
                            record.getField('purchase_tax').setReadOnly(false);
                            record.getField('purchase_tax').setRequired(true);
                        }
                    }
                    if (name == 'plate_price') {
                        var invoice_price = record.get('invoice_price') || 0;
                        var insurance_amount = record.get('insurance_amount') || 0;
                        var purchase_tax = record.get('purchase_tax') || 0;
                        var down_payment = record.get('down_payment') || 0;
                        var balloon_ratio = record.get('balloon_ratio') || 0;
                        var balloon = parseFloat(balloon_ratio) * (parseInt(invoice_price) + parseInt(insurance_amount) + parseInt(purchase_tax) + parseInt(value));
                        record.set('balloon', balloon);
                        var finance_amount = parseInt(invoice_price) + parseInt(insurance_amount) + parseInt(purchase_tax) + parseInt(value) - parseInt(down_payment);
                        var down_payment_ratio = parseInt(down_payment) / (parseInt(value) + parseInt(insurance_amount) + parseInt(purchase_tax) + parseInt(invoice_price));
                        record.set('finance_amount', finance_amount);
                        record.set('down_payment_ratio', down_payment_ratio);
                    }
                    if (name == 'purchase_tax') {
                        var invoice_price = record.get('invoice_price') || 0;
                        var insurance_amount = record.get('insurance_amount') || 0;
                        var plate_price = record.get('plate_price') || 0;
                        var down_payment = record.get('down_payment') || 0;
                        var balloon_ratio = record.get('balloon_ratio') || 0;
                        var balloon = parseFloat(balloon_ratio) * (parseInt(invoice_price) + parseInt(insurance_amount) + parseInt(value) + parseInt(plate_price));
                        record.set('balloon', balloon);
                        var finance_amount = parseInt(invoice_price) + parseInt(insurance_amount) + parseInt(plate_price) + parseInt(value) - parseInt(down_payment);
                        var down_payment_ratio = parseInt(down_payment) / (parseInt(value) + parseInt(insurance_amount) + parseInt(plate_price) + parseInt(invoice_price));
                        record.set('finance_amount', finance_amount);
                        record.set('down_payment_ratio', down_payment_ratio);
                    }
                    if (name == 'insurance_amount') {
                        var invoice_price = record.get('invoice_price') || 0;
                        var plate_price = record.get('plate_price') || 0;
                        var purchase_tax = record.get('purchase_tax') || 0;
                        var down_payment = record.get('down_payment') || 0;
                        var balloon_ratio = record.get('balloon_ratio') || 0;
                        var balloon = parseFloat(balloon_ratio) * (parseInt(invoice_price) + parseInt(value) + parseInt(purchase_tax) + parseInt(plate_price));
                        record.set('balloon', balloon);
                        var finance_amount = parseInt(invoice_price) + parseInt(plate_price) + parseInt(purchase_tax) + parseInt(value) - parseInt(down_payment);
                        var down_payment_ratio = parseInt(down_payment) / (parseInt(value) + parseInt(plate_price) + parseInt(purchase_tax) + parseInt(invoice_price));
                        record.set('finance_amount', finance_amount);
                        record.set('down_payment_ratio', down_payment_ratio);
                    } else if (name == 'lease_charge_ratio') {
                        var finance_amount = record.get('finance_amount') || 0;
                        var lease_charge = parseFloat(value) * parseInt(finance_amount)
                        record.set('lease_charge', lease_charge);
                    }
                    if ((ds.id).indexOf('con_contract_lease_item') != -1) {
                        //首付款校验
                        if (ds.fields.down_payment) {
                            ds.fields.down_payment.pro.validator = down_payment_validate;
                        }
                        //购置价校验
                        if (ds.fields.invoice_price) {
                            ds.fields.invoice_price.pro.validator = invoice_price_validate;
                        }
                        //融资额校验
                        if (ds.fields.finance_amount) {
                            ds.fields.finance_amount.pro.validator = finance_amount_validate;
                        }
                        //指导价校验
                        if (ds.fields.guide_price) {
                            ds.fields.guide_price.pro.validator = guide_price_validate;
                        }
                    }
                }
                if (ds.id == ds_bp_id) {
                    if (name == 'liv_province') {
                        record.set('liv_city', '');
                        record.set('liv_city_n', '');
                    }
                    if (name == 'work_province') {
                        record.set('work_city', '');
                        record.set('work_city_n', '');
                    }
                    if (name == 'living_add_province') {
                        record.set('living_add_city', '');
                        record.set('living_add_city_n', '');
                    }
                    if (name == 'work_province_sp') {
                        record.set('work_city_sp', '');
                        record.set('work_city_sp_n', '');
                    }
                }
                if (ds.id == ds_dp_id) {
                    if (name == 'liv_province') {
                        record.set('liv_city', '');
                        record.set('liv_city_n', '');
                    }
                    if (name == 'work_province') {
                        record.set('work_city', '');
                        record.set('work_city_n', '');
                    }
                }
                if (name == 'ccr_start_times') {
                    if (value) {
                        window['${/parameter/@bp_seq}${/parameter/@layout_code}_lock_layout_dynamic_window']();
                        Aurora.request({
                            url: $('con731_calc_change_data_link').getUrl(),
                            para: {
                                contract_id: ${/parameter/@change_req_id},
                                ccr_start_times: value
                            },
                            success: function(res) {
                                record.set('ccr_outstanding_prin_tax_incld', res.result.ccr_outs_prin_tax_incld);
                                record.set('ccr_outstanding_prin_ti_total', res.result.ccr_outs_prin_ti_total);
                                record.set('ccr_overdue_rental', res.result.ccr_overdue_rental);
                                record.set('ccr_penalty', res.result.ccr_penalty);
                                record.set('ccr_outstanding_times', res.result.ccr_outstanding_times);
                                window['${/parameter/@bp_seq}${/parameter/@layout_code}_unlock_layout_dynamic_window']();
                            },
                            failure: function() {
                                window['${/parameter/@bp_seq}${/parameter/@layout_code}_unlock_layout_dynamic_window']();
                            },
                            error: function() {
                                window['${/parameter/@bp_seq}${/parameter/@layout_code}_unlock_layout_dynamic_window']();
                            },
                            scope: this
                        });
                    }
                }
            };
            
            function down_payment_validate(record, name, value) {
                var down_payment_ratio_from = record.get('down_payment_ratio_from') || 0;
                var down_payment_ratio_to = record.get('down_payment_ratio_to') || 1;
                var invoice_price = record.get('invoice_price') || 0;
                var insurance_amount = record.get('insurance_amount') || 0;
                var purchase_tax = record.get('purchase_tax') || 0;
                var plate_price = record.get('plate_price') || 0;
                var down_payment_ratio = parseInt(value) / (parseInt(invoice_price) + parseInt(insurance_amount) + parseInt(purchase_tax) + parseInt(plate_price));
                if (down_payment_ratio < down_payment_ratio_from || down_payment_ratio > down_payment_ratio_to) {
                    Aurora.showMessage('提示', '首付比例只能在' + down_payment_ratio_from * 100 + '到' + down_payment_ratio_to * 100 + '之间！');
                    return '首付比例只能在' + down_payment_ratio_from * 100 + '到' + down_payment_ratio_to * 100 + '之间！';
                }
                return true;
            }
            
            function invoice_price_validate(record, name, value) {
                var guide_price = record.get('guide_price') || 9999999999;
                if (value > guide_price) {
                    Aurora.showMessage('提示', '购置价不能大于指导价！');
                    return '购置价不能大于指导价';
                }
                return true;
            }
            
            function finance_amount_validate(record, name, value) {
                var finance_amount_from = record.get('finance_amount_from') || 0;
                var finance_amount_to = record.get('finance_amount_to') || 99999999999;
                if (value < finance_amount_from || value > finance_amount_to) {
                    Aurora.showMessage('提示', '融资额超出范围，请重新选择融资方案！');
                    return '请填写' + finance_amount_from + '到' + finance_amount_to + '之间的数字';
                }
                return true;
            }
            
            function guide_price_validate(record, name, value) {
                var invoice_price = record.get('invoice_price') || 0;
                if (invoice_price > value) {
                    Aurora.showMessage('提示', '购置价不能大于指导价！');
                    return '购置价不能大于指导价';
                }
                return true;
            }
            
            window['${/parameter/@layout_code}_dynamic_link_renderer'] = function(value, record, name, config_record, bp_seq) {
                var link_function = '';
                window['${/parameter/@layout_code}_hls_link_render_record'][record.id + '---' + name] = record;
                if (name == 'bp_link' && record.get('bp_id') && record.get('record_id')) {
                    link_function = '${/parameter/@layout_code}_open_bp_detail_window';
                    return '<a href="javascript:window[\'' + link_function + '\'](\'' + record.id + '\',\'' + name + '\');">' + config_record.get('prompt') + '</a>';
                } else if (name == 'car_detail' && record.get('contract_lease_item_id')) {
                    link_function = '${/parameter/@layout_code}_open_lease_item_detail_window';
                    return '<a href="javascript:window[\'' + link_function + '\'](\'' + record.id + '\',\'' + name + '\');">' + config_record.get('prompt') + '</a>';
                } else if (name == 'attachment') {
                    //link_function = '${/parameter/@layout_code}_prj500_cdd_attachtment_upload';
					link_function = '${/parameter/@layout_code}_upload_layout_dynamic_click';
                    return '<a href="javascript:window[\'' + link_function + '\'](\'' + record.ds.id + '\',\'' + record.id + '\',\'' + name + '\',\'' + config_record.get('query_only') + '\');">' + config_record.get('prompt') + '</a>';
                } else if (name == 'attach_file_name') {
                    if (value != null) {
                        var link = '${/request/@context_path}/atm_download.svc?attachment_id=';
                        var str = value.split(';;');
                        var url = '';
                        for (var i = 0;i < str.length;i++) {
                            var temp = str[i].split('--');
                            if (!Aurora.isEmpty(temp[0])) {
            
                                var file_suffix = temp[0].substr(temp[0].lastIndexOf('.') + 1).toUpperCase();
                                if (file_suffix == 'BMP' || file_suffix == 'JPG' || file_suffix == 'JPEG' || file_suffix == 'PNG' || file_suffix == 'GIF') {
                                    url = url + '<a ref="img" href=' + link + temp[1] + '>' + temp[0] + '</a>' + ',';
                                } else {
                                    url = url + '<a href=' + link + temp[1] + '>' + temp[0] + '</a>' + ',';
                                }
                            }
                        }
                        return url;
                    }
                } else if (name == 'description') {
                    if (record.get('important_flag') == 'Y') {
                        return '<font color="RED">' + value + '</font>';
                    }
                    return value;
                } else if (name == 'link1') {
                    link_function = '${/parameter/@layout_code}_ast_con_cdd_attachtment_upload';
                    if (record.get('atm_num1') > 0) {
                        return '<a style="color:red" href="javascript:window[\'' + link_function + '\'](\'' + record.ds.id + '\',\'' + record.id + '\',\'' + name + '\',\'' + config_record.get('query_only') + '\');">' + config_record.get('prompt') + '</a>';
                    } else {
                        return '<a href="javascript:window[\'' + link_function + '\'](\'' + record.ds.id + '\',\'' + record.id + '\',\'' + name + '\',\'' + config_record.get('query_only') + '\');">' + config_record.get('prompt') + '</a>';
                    }
                } else if (name == 'link2') {
                    link_function = '${/parameter/@layout_code}_ast_con_cdd2_attachtment_upload';
                    if (record.get('atm_num2') > 0) {
                        return '<a style="color:red" href="javascript:window[\'' + link_function + '\'](\'' + record.ds.id + '\',\'' + record.id + '\',\'' + name + '\',\'' + config_record.get('query_only') + '\');">' + config_record.get('prompt') + '</a>';
                    } else {
                        return '<a href="javascript:window[\'' + link_function + '\'](\'' + record.ds.id + '\',\'' + record.id + '\',\'' + name + '\',\'' + config_record.get('query_only') + '\');">' + config_record.get('prompt') + '</a>';
                    }
            
                } else if (name == 'link3') {
                    link_function = '${/parameter/@layout_code}_ast_con_cdd3_attachtment_upload';
                    if (record.get('atm_num3') > 0) {
                        return '<a style="color:red" href="javascript:window[\'' + link_function + '\'](\'' + record.ds.id + '\',\'' + record.id + '\',\'' + name + '\',\'' + config_record.get('query_only') + '\');">' + config_record.get('prompt') + '</a>';
                    } else {
                        return '<a href="javascript:window[\'' + link_function + '\'](\'' + record.ds.id + '\',\'' + record.id + '\',\'' + name + '\',\'' + config_record.get('query_only') + '\');">' + config_record.get('prompt') + '</a>';
                    }
                }
            };
            
            //打包下载
            window['${/parameter/@layout_code}_user_button6_layout_dynamic_click'] = function() {
                var prj_project_id = get_dsid_by_basetable(window['${/parameter/@layout_code}_layoutDataSetList'], 'con_contract');
                var prj_project_record = $(prj_project_id).getAt(0);
                var project_id = prj_project_record.get('project_id');
                var url_l = $('${/parameter/@layout_code}${/parameter/@pre_layout}get_atch_download_link').getUrl() + '?table_pk_value=' + project_id + '&table_name=PRJ_PROJECT' + '&doc_code=' + project_id + '&all_flag=Y';
                window.open(href = url_l, target = "_self");
            };
			 //新增时调用(grid,table,gridBox)
            window['${/parameter/@bp_seq}${/parameter/@layout_code}_on_layout_dynamic_grid_add'] = function(ds, record, config_records, bp_seq) {
            
                Aurora.request({
                    url: '${/request/@context_path}/autocrud/prj.PRJ500D.sys_date/query',
                    para: {},
                    success: function(res) {
                        var sysdate = res.result.record.sys_date;
                        record.set('return_time', sysdate);
                    },
                    error: function() {
            
                       },
                    failure: function() {
            
                       },
                    scope: this
                });
            };
        ]]></script>
        <a:screen-include screen="modules/cont/CON500/con_contract_get_layout_code.screen"/>
    </a:view>
</a:screen>
