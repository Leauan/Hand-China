<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: wangwei5743  
    $Date: 2014-10-8 下午3:16:19  
    $Revision: 1.0  
    $purpose: 租赁申请创建  创建界面       
-->
<a:screen xmlns:s="aurora.plugin.script" xmlns:a="http://www.aurora-framework.org/application" customizationEnabled="true" dynamiccreateenabled="true" trace="true">
    <a:init-procedure>
        <a:model-query defaultWhereClause="t1.user_id=${/session/@user_id}" model="prj.PRJ500D.sys_user_lv" rootPath="user_name_path"/>
        <a:model-query fetchAll="true" model="prj.PRJ500D.get_cdd_list_id" rootPath="cdd_list_id_path"/>
        <a:model-query fetchAll="true" model="prj.PRJ500D.sys_date" rootPath="sysdate"/>
        <s:server-script import="con_print_path.js"><![CDATA[
            set_parameter_file_path();
        ]]></s:server-script>
    </a:init-procedure>
    <a:view>
	    <a:link id="${/parameter/@layout_code}_prj500_cdd_downloadFile_id" url="${/request/@context_path}/uploadOnlyFile.screen"/>
        <a:link id="check_gps_visit_link" model="hls.HLS051.check_gps_visit" modelaction="execute"/>
        <a:link id="${/parameter/@layout_code}${/parameter/@pre_layout}zj_wfl_approve_history_check" url="${/request/@context_path}/modules/zjwfl/zj_wfl_approve_history_check.screen"/>
        <a:link id="${/parameter/@layout_code}${/parameter/@pre_layout}get_car_organization_id" model="prj.PRJ500D.yonda_car_organization" modelaction="query"/>
        <a:link id="${/parameter/@layout_code}${/parameter/@pre_layout}get_special_fields_link_id" model="cont.CON500.con_contract_get_special_fields" modelaction="update"/>
        <a:link id="${/parameter/@layout_code}${/parameter/@pre_layout}get_calc_id" model="prj.PRJ500D.calc_quotation" modelaction="update"/>
        <a:link id="${/parameter/@layout_code}${/parameter/@pre_layout}check_product_package_bag_link_id" model="prj.PRJ500D.prj_project_before_workflow_start" modelaction="update"/>
        <a:link id="${/parameter/@layout_code}${/parameter/@pre_layout}submit_approval_link" model="prj.PRJ500D.prj_project_workflow_start" modelaction="update"/>
        <a:link id="${/parameter/@layout_code}${/parameter/@pre_layout}prj500_cdd_uploadFile_id" url="${/request/@context_path}/uploadFile.screen"/>
        <a:link id="${/parameter/@layout_code}${/parameter/@pre_layout}prj500_cdd_downloadFile_id" url="${/request/@context_path}/downloadFile.screen"/>
        <a:link id="${/parameter/@layout_code}${/parameter/@pre_layout}prj500_mod_cdd_uploadFile_id" url="${/request/@context_path}/modules/prj/PRJ501N/uploadFile.screen"/>
        <!--<a:link id="${/parameter/@layout_code}${/parameter/@pre_layout}prj500_mod_cdd_downloadFile_id" url="${/request/@context_path}/downloadFile.screen"/>-->
        <a:link id="${/parameter/@layout_code}${/parameter/@pre_layout}get_id_card_no_info_id" model="prj.PRJ500D.hls_bp_master_np_v" modelaction="query"/>
        <a:link id="${/parameter/@layout_code}${/parameter/@pre_layout}get_organization_code_id" model="prj.PRJ500D.hls_bp_master_org_v" modelaction="query"/>
        <a:link id="${/parameter/@layout_code}${/parameter/@pre_layout}get_id_card_no_info_guar_id" model="prj.PRJ500D.hls_bp_master_np_guar" modelaction="query"/>
        <a:link id="${/parameter/@layout_code}${/parameter/@pre_layout}get_org_code_info_guar_id" model="prj.PRJ500D.hls_bp_master_org_guar" modelaction="query"/>
        <a:link id="${/parameter/@layout_code}${/parameter/@pre_layout}get_id_card_no_tenant_sec_id" model="prj.PRJ500D.hls_bp_master_np_tenant_sec_v" modelaction="query"/>
        <a:link id="${/parameter/@layout_code}${/parameter/@pre_layout}user_id_query_link" model="prj.PRJ500D.sys_user_lv" modelaction="query"/>
        <a:link id="${/parameter/@layout_code}${/parameter/@pre_layout}get_calc_validate_sql_link" model="prj.PRJ500D.prj_get_calc_validate_sql" modelaction="query"/>
        <a:link id="${/parameter/@layout_code}${/parameter/@pre_layout}get_car_organization_id_link" model="prj.PRJ500D.get_hls_car_organization" modelaction="query"/>
        <a:link id="${/parameter/@layout_code}${/parameter/@pre_layout}get_company_distrct_link" model="prj.PRJ500D.get_company_info" modelaction="query"/>
        <a:link id="${/parameter/@layout_code}${/parameter/@pre_layout}get_bp_id_invoice_link" model="prj.PRJ500D.get_bp_id_invoice" modelaction="query"/>
        <a:link id="${/parameter/@layout_code}${/parameter/@pre_layout}get_atch_download_link" url="${/request/@context_path}/modules/batch_download/lease_atm_batch_dl.svc"/>
        <a:link id="${/parameter/@layout_code}${/parameter/@pre_layout}prj_project_dowload_uploadfile" url="${/request/@context_path}/modules/prj/lease_atm_batch_dl.svc"/>
        <script src="${/request/@context_path}/javascripts/input_validator.js"/>
        <a:link id="${/parameter/@layout_code}${/parameter/@pre_layout}con_item_frame_number_link" model="cont.CON501N.con_item_frame_number" modelaction="execute"/>
        <a:link id="${/parameter/@layout_code}${/parameter/@pre_layout}prj501n_analyse_detail_link" url="${/request/@context_path}/modules/prj/PRJ501N/prj_analyse_detail.screen"/>
        <link href="${/request/@context_path}/css/lightbox.css" rel="stylesheet" type="text/css"/>
        <a:link id="create_cdd_link" model="check_after_save_bm.prj_project_create_check" modelaction="execute"/>
        <script src="${/request/@context_path}/javascripts/lightbox.js"/>
        <a:link id="bp_name_change_link" model="hls.HLS214.hl_hls_bp_bp_name_change_flag" modelaction="update"/>
        <a:link id="id_card_no_change_link" model="hls.HLS214.hl_hls_bp_id_card_no_change_flag" modelaction="update"/>
        <a:link id="prj_cdd_link" model="prj.PRJ500D.prj_cdd_check" modelaction="update"/>
        <!-- <script src="${/request/@context_path}/modules/prj/PRJ500N/javascripts/check_org_code.js"/> -->
        <a:link id="credit_copy_from_template_link_id" url="${/request/@context_path}/modules/prj/PRJ501N/credit_doc_create.svc"/>
        <a:link id="prj_atm_batch_download_pdf_link_id" url="${/request/@context_path}/modules/prj/PRJ501N/prj_atm_batch_dl.svc"/>
        <script><![CDATA[
		    if ('${/parameter/@layout_code}' == 'PROJECT_WFL_NP_RM') {
                zjwfl5110_ApproveChecker_add('zjwfl5110_submit', function(type) {
                    if (type == 'agree') {
                        var prj_project_id = get_dsid_by_basetable(window['${/parameter/@layout_code}_layoutDataSetList'], 'prj_project');
                        var prj_project_bp_id = get_dsid_by_basetable(window['${/parameter/@layout_code}_layoutDataSetList'], 'prj_project_bp');
                        if (Ext.isEmpty($(prj_project_bp_id).getAt(0).get('industry')) || Ext.isEmpty($(prj_project_bp_id).getAt(0).get('occuption'))) {
                            Aurora.showMessage('提示', '行业和职业不能为空，请先填写并保存！');
                            return false;
                        }
                        if ($(prj_project_bp_id).getAt(0).dirty) {
                            Aurora.showMessage('提示', '页面数据存在修改，请先保存！');
                            return false;
                        }
                        var hl_prj_reject_reason_id = get_dsid_by_basetable(window['${/parameter/@layout_code}_layoutDataSetList'], 'hl_prj_reject_reason');
                        var reason_record = $(hl_prj_reject_reason_id).getAt(0);
                        if (reason_record.dirty) {
                            Aurora.showMessage('提示', '页面存在修改，请先保存！');
                            return false;
                        }
                    }
                    return true;
                });
            }
            //add by wdd 20180522 for Hl
            //承租人姓名，身份证变更
            var bp_name_old = '';
            var id_card_no_old = '';
            //end
            var save_flag = 'N';
            //忽略保存校验方法
            window['${/parameter/@layout_code}_ignore_required_before_save'] = function() {
                // param['show_history_flag'] = 'Y';
                if (save_flag == 'Y') {
                    window['${/parameter/@layout_code}_not_ignore_required_flag'] = true;
                } else {
                    window['${/parameter/@layout_code}_not_ignore_required_flag'] = false;
                }
            };
            
            Ext.ux.Lightbox.register('a[ref=img]', true);
            
            var product_plan_flag = 'N';
            //提交审批
            var submit_wfl_flag = 'N';
            //征信授权书
            var credit_flag = 'N';
            //提交审批
            //提交审批
             window['${/parameter/@layout_code}_user_button1_layout_dynamic_click'] = function() {
			   var ds_id = get_dsid_by_basetable(window['${/parameter/@layout_code}_layoutDataSetList'], 'prj_project');
               
               var record = $(ds_id).getCurrentRecord();
                window['${/parameter/@layout_code}_not_ignore_required_flag'] = true;
                Aurora.showConfirm('${l:HLS.PROMPT}', '确认提交？', function() {
                    Aurora.request({
                        url: $('prj_cdd_link').getUrl(),
                        para: {
                            project_id: record.get('project_id')
                        },
                        success: function(res) {
                            //window['${/parameter/@layout_code}_unlock_layout_dynamic_window']();
                            window['${/parameter/@layout_code}_not_ignore_required_flag'] = true;
                            var root_ds_1 = $('${/parameter/@layout_code}_virtual_ds');
                            if (root_ds_1.validate()) {
                                submit_wfl_flag = 'Y';
                                //提交先保存
                                window['${/parameter/@layout_code}_SAVE_LAYOUT_DYNAMIC_CLICK']();
                            }
                        },
                        failure: function(res) {
                            window['${/parameter/@layout_code}_unlock_layout_dynamic_window']();
                        },
                        error: function() {
                            window['${/parameter/@layout_code}_unlock_layout_dynamic_window']();
                        },
                        scope: this
                    });
                });
            };
            
            //征信授权书
            window['${/parameter/@layout_code}_credit_layout_dynamic_click'] = function() {
			   var ds_id = get_dsid_by_basetable(window['${/parameter/@layout_code}_layoutDataSetList'], 'prj_project');
               var record = $(ds_id).getCurrentRecord();
                window['${/parameter/@layout_code}_not_ignore_required_flag'] = true;
                Aurora.showConfirm('${l:HLS.PROMPT}', '确认打印征信授权书吗？', function() {
                    /* Aurora.request({
                        url: $('prj_cdd_link').getUrl(),
                        para: {
                            project_id: record.get('project_id')
                        },
                        success: function(res) { */
                            //window['${/parameter/@layout_code}_unlock_layout_dynamic_window']();
                    window['${/parameter/@layout_code}_not_ignore_required_flag'] = true;
                    var root_ds_1 = $('${/parameter/@layout_code}_virtual_ds');
                    if (root_ds_1.validate()) {
                        credit_flag = 'Y';
                        //提交先保存
                        window['${/parameter/@layout_code}_SAVE_LAYOUT_DYNAMIC_CLICK']();
                    }
                       /*  },
                        failure: function(res) {
                            //window['${/parameter/@layout_code}_unlock_layout_dynamic_window']();
                        },
                        error: function() {
                            //window['${/parameter/@layout_code}_unlock_layout_dynamic_window']();
                        },
                        scope: this
                    }); */
                });
            };
            
            //打包下载
            window['${/parameter/@layout_code}_user_button2_layout_dynamic_click'] = function() {
                var prj_project_id = get_dsid_by_basetable(window['${/parameter/@layout_code}_layoutDataSetList'], 'prj_project');
                var prj_project_record = $(prj_project_id).getAt(0);
                var project_id = prj_project_record.get('project_id');
                var url_l = $('${/parameter/@layout_code}${/parameter/@pre_layout}get_atch_download_link').getUrl() + '?table_pk_value=' + project_id + '&table_name=PRJ_PROJECT' + '&doc_code=' + project_id + '&all_flag=Y';
                window.open(href = url_l, target = "_self");
            };
            
            //单据跟踪
            window['${/parameter/@layout_code}_user_button3_layout_dynamic_click'] = function() {
                var prj_project_ds_id = get_dsid_by_basetable(window['${/parameter/@layout_code}_layoutDataSetList'], 'prj_project');
                var instance_id = $(prj_project_ds_id).getAt(0).get('wfl_instance_id');
                var win = new Aurora.Window({
                    id: 'history_check',
                    url: $('${/parameter/@layout_code}${/parameter/@pre_layout}zj_wfl_approve_history_check').getUrl(),
                    params: {
                        instance_id: instance_id
                    },
                    title: '单据历史查看',
                    height: 500,
                    width: 860,
                    fullScreen: true
                });
            };
            
            window['${/parameter/@layout_code}_ACY_USER_BUTTON1_layout_dynamic_tab_click'] = function() {
                var prj_project_id = get_dsid_by_basetable(window['${/parameter/@layout_code}_layoutDataSetList'], 'prj_project');
                var prj_project_record = $(prj_project_id).getAt(0);
                var project_id = prj_project_record.get('project_id');
                var url_l = $('${/parameter/@layout_code}${/parameter/@pre_layout}get_atch_download_link').getUrl() + '?table_pk_value=' + project_id + '&table_name=PRJ_PROJECT' + '&doc_code=' + project_id + '&all_flag=Y';
                window.open(href = url_l, target = "_self");
            };
            
            //保存submitsuccess调用
            window['${/parameter/@layout_code}_on_layout_dynamic_submitsuccess'] = function(ds, record, res) {
                window['${/parameter/@layout_code}_lock_layout_dynamic_window']();
                var ds_id = get_dsid_by_basetable(window['${/parameter/@layout_code}_layoutDataSetList'], 'prj_project');
                var item_ds_id = get_dsid_by_basetable(window['${/parameter/@layout_code}_layoutDataSetList'], 'prj_project_lease_item');
            
            
                //add by wdd 20180522 for HL
                var prj_project_bp_ds_id = get_dsid_by_basetable(window['${/parameter/@layout_code}_layoutDataSetList'], 'prj_project_bp');
                var prj_project_bp_record = $(prj_project_bp_ds_id).getCurrentRecord();
            
                var bp_name = prj_project_bp_record.get('bp_name');
                var bp_id = prj_project_bp_record.get('bp_id');
            
                var id_card_no = prj_project_bp_record.get('id_card_no');
                if (bp_name_old != '' && bp_name != bp_name_old) {
                    Aurora.request({
                        url: $('bp_name_change_link').getUrl(),
                        para: {
                            bp_id: bp_id
                        },
                        success: function(res) {
                            window['${/parameter/@layout_code}_unlock_layout_dynamic_window']();
                        },
                        failure: function(res) {
                            window['${/parameter/@layout_code}_unlock_layout_dynamic_window']();
                        },
                        error: function() {
                            window['${/parameter/@layout_code}_unlock_layout_dynamic_window']();
                        },
                        scope: this
                    });
                }
            
                if (id_card_no_old != '' && id_card_no != id_card_no_old) {
                    window['${/parameter/@layout_code}_lock_layout_dynamic_window']();
                    Aurora.request({
                        url: $('id_card_no_change_link').getUrl(),
                        para: {
                            bp_id: bp_id
                        },
                        success: function(res) {
                            window['${/parameter/@layout_code}_unlock_layout_dynamic_window']();
                        },
                        failure: function(res) {
                            window['${/parameter/@layout_code}_unlock_layout_dynamic_window']();
                        },
                        error: function() {
                            window['${/parameter/@layout_code}_unlock_layout_dynamic_window']();
                        },
                        scope: this
                    });
                }
                //end
                if (submit_wfl_flag == 'Y') {
                    submit_wfl_flag = 'N';
                    Aurora.request({
                        url: $('${/parameter/@layout_code}${/parameter/@pre_layout}submit_approval_link').getUrl(),
                        para: {
                            project_id: $(ds_id).getAt(0).get('project_id')
                        },
                        success: function() {
                            window['${/parameter/@layout_code}_unlock_layout_dynamic_window']();
                            $('${/parameter/@winid}').close();
                            Aurora.SideBar.show({
                                msg: '操作成功',
                                duration: 2000
                            });
                        },
                        failure: function() {
                            submit_wfl_flag = 'N';
                            window['${/parameter/@layout_code}_unlock_layout_dynamic_window']();
                        },
                        error: function() {
                            submit_wfl_flag = 'N';
                            window['${/parameter/@layout_code}_unlock_layout_dynamic_window']();
                        },
                        scope: this
                    });
            
                }else if(credit_flag == 'Y'){
                	var credit_print_flag = '';
                    credit_flag = 'N';
                	project_id = $(ds_id).getAt(0).get('project_id');
                	Aurora.Masker.mask(Ext.getBody(), '正在生成.....');
                    //匹配文档
                    Aurora.request({
                        url: '${/request/@context_path}/autocrud/prj.PRJ501.prj_credit_doc_create/update',
                        para: {
                            project_id: project_id
                        },
                        success: function() {
                            //生成文本和pdf文件
                            Aurora.request({
		                        url: $('credit_copy_from_template_link_id').getUrl(),
		                        para: {
		                            project_id: project_id,
		                            file_path: '${/parameter/@file_path}'
		                        },
		                        success: function() {
		                            //下载pdf
		                           Aurora.request({
				                        url: '${/request/@context_path}/autocrud/prj.PRJ501.get_prj_content_id/query',
				                        para: {
				                            project_id: project_id
				                        },
				                        success: function(data) {
				                            credit_flag = 'N';
				                            var content_id = data.result.record.content_id;
				                			var url_l = $('prj_atm_batch_download_pdf_link_id').getUrl() + '?content_id=' + content_id + '&type=SIN';
				            
							                window.open(href = url_l, target = "_self");
							                window['${/parameter/@layout_code}_unlock_layout_dynamic_window']();
							                Aurora.Masker.unmask(Ext.getBody());
				                        },
				                        failure: function() {
				                            credit_flag = 'N';
				                            window['${/parameter/@layout_code}_unlock_layout_dynamic_window']();
				                            Aurora.Masker.unmask(Ext.getBody());
				                        },
				                        error: function() {
				                            credit_flag = 'N';
				                            window['${/parameter/@layout_code}_unlock_layout_dynamic_window']();
				                            Aurora.Masker.unmask(Ext.getBody());
				                        },
				                        scope: this
				                    }); 
		                        },
		                        failure: function() {
		                            credit_flag = 'N';
		                            window['${/parameter/@layout_code}_unlock_layout_dynamic_window']();
		                            Aurora.Masker.unmask(Ext.getBody());
		                        },
		                        error: function() {
		                            credit_flag = 'N';
		                            window['${/parameter/@layout_code}_unlock_layout_dynamic_window']();
		                            Aurora.Masker.unmask(Ext.getBody());
		                        },
		                        scope: this
		                    });
                        },
                        failure: function() {
                            credit_flag = 'N';
                            window['${/parameter/@layout_code}_unlock_layout_dynamic_window']();
                            Aurora.Masker.unmask(Ext.getBody());
                        },
                        error: function() {
                            credit_flag = 'N';
                            window['${/parameter/@layout_code}_unlock_layout_dynamic_window']();
                            Aurora.Masker.unmask(Ext.getBody());
                        },
                        scope: this
                    });
                } else {
                    if (ds_id) {
                        record = $(ds_id).getAt(0);
                        var project_id = record.get('project_id');
                        var cdd_item_ds_id = get_dsid_by_basetable(window['${/parameter/@layout_code}_layoutDataSetList'], 'prj_cdd_item_doc_ref');
                        var lease_item_ds_id = get_dsid_by_basetable(window['${/parameter/@layout_code}_layoutDataSetList'], 'prj_project_lease_item');
                        // $(cdd_item_ds_id).setQueryParameter('cdd_list_id', record.get('cdd_list_id'));
                        // $(cdd_item_ds_id).query();
                        var prj_cdd_item_doc_ref_ds = $(cdd_item_ds_id);
                        // var cdd_list_id = record.get('cdd_list_id');
                        var product_plan_id = $(lease_item_ds_id).getAt(0).get('product_plan_id');
            
                        function prj_cdd_item_doc_ref_load() {
                            //取消重复监听
                            prj_cdd_item_doc_ref_ds.un('load', prj_cdd_item_doc_ref_load);
                            $(cdd_item_ds_id).submit();
                        }
                        prj_cdd_item_doc_ref_ds.on('load', prj_cdd_item_doc_ref_load);
                        var ln_ds_id = get_dsid_by_basetable(window['${/parameter/@layout_code}_layoutDataSetList'], 'hls_fin_calculator_ln');
                        var quotation_ds_id = get_dsid_by_basetable(window['${/parameter/@layout_code}_layoutDataSetList'], 'prj_quotation');
                        $(ln_ds_id).query();
                        $(quotation_ds_id).query();
            
                          if ('${/parameter/@layout_code}' == 'PROJECT_CREATE_NP') {
                            Aurora.request({
            
                                url: $('create_cdd_link').getUrl(),
                                para: {
                                    product_plan_flag: product_plan_flag,
                                    project_id: project_id,
                                    product_plan_id: product_plan_id,
                                    function_code: 'PRJ501D',
                                    function_usage: 'MODIFY'
                                },
                                success: function() {
                                    debugger;
                                    product_plan_flag = 'N';
                                    Aurora.request({
                                        url: '${/request/@context_path}/autocrud/prj.PRJ500D.get_cdd_list_id/query',
                                        para: {
                                            project_id: project_id
                                        },
                                        success: function(res) {
                                            var cdd_list_id = res.result.record.cdd_list_id;
                                            $(cdd_item_ds_id).setQueryParameter('cdd_list_id', cdd_list_id);
                                            $(ds_id).query();
                                        },
                                        error: function() {
            
                                           },
                                        failure: function() {
            
                                           },
                                        scope: this
                                    });
            
            
                                },
                                failure: function() {},
                                error: function() {},
                                scope: this
                            });
                        } else if ('${/parameter/@layout_code}' == 'PROJECT_CREATE_NP_MODIFY') {}
                        save_flag = 'Y';
                        window['${/parameter/@layout_code}_ignore_required_before_save']();
                    }
                    window['${/parameter/@layout_code}_unlock_layout_dynamic_window']();
                }
            
            
                window['${/parameter/@layout_code}_unlock_layout_dynamic_window']();
            
            };
            
            function upload_file(id, name, query_only) {
			    var record = window['${/parameter/@layout_code}_hls_link_render_record'][id + '---' + name];
                if (record.get('check_id')) {
                    var url;
                    if ('${/parameter/@layout_code}' == 'PROJECT_CREATE_NP') {
                        if (query_only == 'Y') {
                            //url = $('${/parameter/@layout_code}${/parameter/@pre_layout}prj500_cdd_downloadFile_id').getUrl() + '?table_name=PRJ_CDD_ITEM_CHECK&header_id=' + record.get('check_id');
							url = $('${/parameter/@layout_code}_prj500_cdd_downloadFile_id').getUrl() + '?table_name=PRJ_CDD_ITEM_CHECK&header_id=' + record.get('check_id');
                        } else {
                            url = $('${/parameter/@layout_code}${/parameter/@pre_layout}prj500_cdd_uploadFile_id').getUrl() + '?table_name=PRJ_CDD_ITEM_CHECK&header_id=' + record.get('check_id');
                        }
                    } else if ('${/parameter/@layout_code}' == 'PROJECT_CREATE_NP_MODIFY') {
                        if (query_only == 'Y') {
						    url = $('${/parameter/@layout_code}_prj500_cdd_downloadFile_id').getUrl() + '?table_name=PRJ_CDD_ITEM_CHECK&header_id=' + record.get('check_id');
                            //url = $('${/parameter/@layout_code}${/parameter/@pre_layout}prj500_cdd_downloadFile_id').getUrl() + '?table_name=PRJ_CDD_ITEM_CHECK&header_id=' + record.get('check_id');
                        } else {
                            url = $('${/parameter/@layout_code}${/parameter/@pre_layout}prj500_mod_cdd_uploadFile_id').getUrl() + '?table_name=PRJ_CDD_ITEM_CHECK&header_id=' + record.get('check_id');
                        }
                    }else if ('${/parameter/@layout_code}' == 'PROJECT_QUERY_NP_ALL'){
					 if (query_only == 'Y') {
					     url = $('${/parameter/@layout_code}_prj500_cdd_downloadFile_id').getUrl() + '?table_name=PRJ_CDD_ITEM_CHECK&header_id=' + record.get('check_id');
                        //url = $('${/parameter/@layout_code}${/parameter/@pre_layout}prj500_cdd_downloadFile_id').getUrl() + '?table_name=PRJ_CDD_ITEM_CHECK&header_id=' + record.get('check_id');
                    } else {
                        url = $('${/parameter/@layout_code}${/parameter/@pre_layout}prj500_cdd_uploadFile_id').getUrl() + '?table_name=PRJ_CDD_ITEM_CHECK&header_id=' + record.get('check_id');
                    }
					}
                    var win = new Aurora.Window({
                        url: url,
                        title: '${l:HLS.SUPPORTING_DOCUMENT}',
                        id: 'prj500_cdd_uploadFile_screen_id',
                        width: 850,
                        height: 400
                    });
            
                    win.on('close', function() {
                        record.ds.query();
                    });
                } else {
                    Aurora.showMessage('${l:HLS.PROMPT}', '请先保存!');
                }
            }
            window['${/parameter/@layout_code}prj501_open_analyse_win'] = function(record_id, ds_id, condition_code) {
                var record = $(ds_id).findById(record_id);
                var param = {};
                param['target_type'] = record.get('target_type');
                param['target'] = record.get('target');
                param['condition_code'] = condition_code;
                param['layout_code'] = 'PRJ_ANALYSE_DETAIL';
                param['winid'] = 'prj501n_analyse_detail_win';
                param['function_usage'] = 'QUERY';
                var win = new Aurora.Window({
                    id: 'prj501n_analyse_detail_win',
                    params: param,
                    url: $('${/parameter/@layout_code}${/parameter/@pre_layout}prj501n_analyse_detail_link').getUrl(),
                    title: '维度明细(' + 'PRJ_ANALYSE_DETAIL)',
                    fullScreen: true,
                    draggable: true
                });
            }
            //超链接渲染
            window['${/parameter/@layout_code}_dynamic_link_renderer'] = function(value, record, name, config_record) {
			    var link_function = '';
                window['${/parameter/@layout_code}_hls_link_render_record'][record.id + '---' + name] = record;
				
                if (name == 'attachment') {
                    link_function = 'upload_file';
					return '<a href="javascript:window[\'' + link_function + '\'](\'' + record.id + '\',\'' + name + '\',\'' + 'Y' + '\');">' + config_record.get('prompt') + '</a>';
                  //return '<a href="javascript:window[\'' + link_function + '\'](\'' + record.id + '\',\'' + name + '\',\'' + config_record.get('query_only') + '\');">' + config_record.get('prompt') + '</a>';
                } else if (name == 'attach_file_name') {
                    if (value != null) {
                        var link = '${/request/@context_path}/atm_download.svc?attachment_id=';
                        var str = value.split(';;');
                        var url = '';
                        for (var i = 0;i < str.length;i++) {
                            var temp = str[i].split('--');
                            if (!Aurora.isEmpty(temp[0])) {
                                //url = url + '<a href=' + link + temp[1] + '>' + temp[0] + '</a>' + ',';
                                var file_suffix = temp[0].substr(temp[0].lastIndexOf('.') + 1).toUpperCase();
                                if (file_suffix == 'BMP' || file_suffix == 'JPG' || file_suffix == 'JPEG' || file_suffix == 'PNG' || file_suffix == 'GIF') {
                                    url = url + '<a ref="img" href=' + link + temp[1] + '>' + temp[0] + '</a>' + ',';
                                } else {
                                    url = url + '<a href=' + link + temp[1] + '>' + temp[0] + '</a>' + ',';
                                }
                            }
                        }
                        return url;
            
                    }
                } else if (name == 'description') {
                    if (record.get('important_flag') == 'Y') {
                        return '<font color="RED">' + value + '</font>';
                    }
                    return value;
                } else if (name == 'approved_count' || name == 'reject_count' || name == 'cancel_count' || name == 'terminate_count' || name == 'new_count') {
                    var condition_code;
                    if (name === 'approved_count') {
                        condition_code = '11';
                    } else if (name === 'reject_count') {
                        condition_code = '12';
                    } else if (name === 'cancel_count') {
                        condition_code = '13';
                    } else if (name === 'terminate_count') {
                        condition_code = '14';
                    }else if (name === 'new_count') {
                        condition_code = '15';
                    }
                    if (value > 0) {
                        return '<a href="javascript:window[\'' + '${/parameter/@layout_code}prj501_open_analyse_win' + '\'](\'' + record.id + '\',\'' + record.ds.id + '\',\'' + condition_code + '\')">' + value + '</a>';
                    } else {
                        return value;
                    }
            
                }
            }; /*查询前调用*/
            window['${/parameter/@bp_seq}${/parameter/@layout_code}_on_layout_dynamic_grid_query'] = function(ds, qpara, bp_seq) {
                var prj_project_ds_id = get_dsid_by_basetable(window['${/parameter/@layout_code}_layoutDataSetList'], 'prj_project');
                var prj_record = $(prj_project_ds_id).getAt(0);
                qpara.project_id = prj_record.get('project_id');
            }; /*保存前调用，生成项目编号*/
            window['${/parameter/@layout_code}_on_layout_dynamic_before_submit'] = function(ds, record) {
                window['${/parameter/@layout_code}_lock_layout_dynamic_window']();
				//modified by 20834
                var bp_info_ds_id = get_dsid_by_basetable(window['${/parameter/@layout_code}_layoutDataSetList'], 'prj_project_bp');
                var annual_income = $(bp_info_ds_id).getAt(0).get('annual_income');
                if(!isNaN(annual_income)){
                    if(annual_income <= 0){
                        Aurora.showMessage('${l:PROMPT}', '税后年收入须大于0！');
                        window['${/parameter/@layout_code}_unlock_layout_dynamic_window']();
                    	return false;
                    }
                }
                var prj_project_ds_id = get_dsid_by_basetable(window['${/parameter/@layout_code}_layoutDataSetList'], 'prj_project');
                var prj_record = $(prj_project_ds_id).getAt(0);
                var check_flag = false;
            
                var lease_item_ds_id = get_dsid_by_basetable(window['${/parameter/@layout_code}_layoutDataSetList'], 'prj_project_lease_item');
                var product_plan_id_a = $(lease_item_ds_id).getAt(0).get('product_plan_id');
                var project_id = prj_record.get('project_id');
                Aurora.request({
                    url: '${/request/@context_path}/autocrud/prj.PRJ500D.get_cdd_list_id/query',
                    para: {
                        project_id: project_id
                    },
                    success: function(res) {
                        var product_plan_id_b = res.result.record.product_plan_id;
                        if (product_plan_id_a != product_plan_id_b) {
                            product_plan_flag = 'Y';
                        }
                    },
                    error: function() {
            
                       },
                    failure: function() {
            
                       },
                    scope: this
                });
            
                if (prj_record.get('project_number')) {
                    return true;
                }
                Aurora.request({
                    url: $('${/parameter/@layout_code}${/parameter/@pre_layout}get_special_fields_link_id').getUrl(),
                    para: {
                        document_category: '${/parameter/@document_category}',
                        document_type: record.get('document_type'),
                        function_code: '${/parameter/@function_code}',
                        function_usage: '${/parameter/@function_usage}'
                    },
                    success: function(res) {
                        var document_number = res.result.document_number;
                        prj_record.set('project_number', document_number);
                        check_flag = true;
                        window['${/parameter/@layout_code}_unlock_layout_dynamic_window']();
                    },
                    error: function() {
                        window['${/parameter/@layout_code}_unlock_layout_dynamic_window']();
                    },
                    failure: function() {
                        window['${/parameter/@layout_code}_unlock_layout_dynamic_window']();
                    },
                    sync: true,
                    scope: this
                });
                return check_flag;
            
            };
            //新增和加载时调用form
            window['${/parameter/@bp_seq}${/parameter/@layout_code}_on_layout_dynamic_form_add_and_load'] = function(ds, record, config_records, bp_seq) {
                var bp_info_ds_id = get_dsid_by_basetable(window['${/parameter/@layout_code}_layoutDataSetList'], 'prj_project_bp');
                var lease_item_info_ds_id = get_dsid_by_basetable(window['${/parameter/@layout_code}_layoutDataSetList'], 'prj_project_lease_item');
                //如果存在的话，进行校验逻辑  排除掉联系人校验
                if ((ds.id).indexOf('prj_project_bp') != -1 && (ds.id).indexOf('prj_project_bp_contact_info') == -1) {
                    //申请人身份证验证
                    if (ds.fields.id_card_no) {
                        ds.fields.id_card_no.pro.validator = id_card_no_validate;
                    }
                    //申请人手机验证
                    if (ds.fields.cell_phone) {
                        ds.fields.cell_phone.pro.validator = cell_phone_validate;
                    }
                    //申请人配偶身份证校验
                    if (ds.fields.id_no_sp) {
                        ds.fields.id_no_sp.pro.validator = id_no_sp_validate;
                    }
                    //申请人配偶手机校验
                    if (ds.fields.cell_phone_sp) {
                        ds.fields.cell_phone_sp.pro.validator = cell_phone_sp_validate;
                    }
                    //法人代表身份证校验
                    if (ds.fields.id_card_no_leg) {
                        ds.fields.id_card_no_leg.pro.validator = id_card_no_leg_validate;
                    }
                    //法人代表手机验证
                    if (ds.fields.cell_phone_leg) {
                        ds.fields.cell_phone_leg.pro.validator = cell_phone_leg_validate;
                    }
                }
                if ((ds.id).indexOf('prj_project_lease_item') != -1) {
                    //首付款校验
                    if (ds.fields.down_payment) {
                        ds.fields.down_payment.pro.validator = down_payment_validate;
                    }
                    //购置价校验
                    if (ds.fields.invoice_price) {
                        ds.fields.invoice_price.pro.validator = invoice_price_validate;
                    }
                    //融资额校验
                    if (ds.fields.finance_amount) {
                        ds.fields.finance_amount.pro.validator = finance_amount_validate;
                    }
                    //指导价校验
                    if (ds.fields.guide_price) {
                        ds.fields.guide_price.pro.validator = guide_price_validate;
                    }
                    if (ds.fields.deposit_deduction) {
                        if (record.get('deposit_ratio') != 0) {
                            record.getField('deposit_deduction_n').setReadOnly(false);
                            record.set('deposit_deduction_n', '最后几期租金');
                            record.set('deposit_deduction', 'K');
                        } else {
                            record.set('deposit_deduction_n', '');
                            record.set('deposit_deduction', '');
                            record.getField('deposit_deduction_n').setReadOnly(true);
                        }
                    }
                }
                if ((ds.id).indexOf('prj_project_bp_contact_info' != -1)) {
                    //联系人1手机校验
                    if (ds.fields.phone_1) {
                        ds.fields.phone_1.pro.validator = phone_validate;
                    }
                    //联系人2手机校验
                    if (ds.fields.phone_2) {
                        ds.fields.phone_2.pro.validator = phone_validate;
                    }
                    //联系人3手机校验
                    if (ds.fields.phone_3) {
                        ds.fields.phone_3.pro.validator = phone_validate;
                    }
                }
                if (bp_info_ds_id == ds.id) {
                    if (ds.fields.marital_status) {
                        if (record.get('marital_status') == 'UM' || record.get('marital_status') == 'DV') {
                            record.getField('id_no_sp').setRequired(false);
                            record.getField('bp_name_sp').setRequired(false);
                            record.getField('cell_phone_sp').setRequired(false);
            
                            //modify by wdd 20180508
                            //应lyp要求注释配偶置空
                            // record.set('bp_name_sp', '');
                            // record.set('id_no_sp', '');
                            // record.set('cell_phone_sp', '');
                            // record.set('work_unit_name_sp', '');
                            //end
            
                            record.set('work_type_sp', '');
                            record.set('work_type_sp_n', '');
                            record.set('age_sp', '');
                            record.set('date_of_birth_sp', '');
                            record.set('gender_sp_n', '');
                            record.getField('bp_name_sp').setReadOnly(false);
                            record.getField('id_no_sp').setReadOnly(false);
                            record.getField('cell_phone_sp').setReadOnly(false);
                            record.getField('work_unit_name_sp').setReadOnly(false);
                            record.getField('work_type_sp_n').setReadOnly(false);
                        } else if (record.get('marital_status') == 'MNC' || record.get('marital_status') == 'MWC' || record.get('marital_status') == 'RM' || Ext.isEmpty(record.get('marital_status'))) {
                            record.getField('bp_name_sp').setReadOnly(false);
                            record.getField('id_no_sp').setReadOnly(false);
                            record.getField('cell_phone_sp').setReadOnly(false);
                            record.getField('work_unit_name_sp').setReadOnly(false);
                            record.getField('work_type_sp_n').setReadOnly(false);
                            //应要求 放开此必填项
                            // record.getField('id_no_sp').setRequired(true);
                            // record.getField('bp_name_sp').setRequired(true);
                            // record.getField('cell_phone_sp').setRequired(true);
                        }
                    }
                }
                if (lease_item_info_ds_id == ds.id) {
                    record.getField('product_plan_id_n').setLovPara('series_id', record.get('series_id'));
                    record.getField('product_plan_id_n').setLovPara('work_type', record.get('work_type'));
                    if (ds.fields.license_fee_flag) {
                        if (record.get('license_fee_flag') == 'N') {
                            record.getField('plate_price').setReadOnly(true);
                            record.getField('plate_price').setRequired(false);
                        }
                        // else {
                        // record.getField('plate_price').setReadOnly(false);
                        // record.getField('plate_price').setRequired(true);
                        // } //应要求 放开校验
                    }
                    if (ds.fields.insurance_flag) {
                        if (record.get('insurance_flag') == 'N') {
                            record.getField('insurance_amount').setReadOnly(true);
                            record.getField('insurance_purchase_n').setReadOnly(true);
                            record.getField('insurance_amount').setRequired(false);
                            record.getField('insurance_purchase_n').setRequired(false);
                        }
                        // else {
                        // record.getField('insurance_amount').setReadOnly(false);
                        // record.getField('insurance_purchase_n').setReadOnly(false);
                        // record.getField('insurance_amount').setRequired(true);
                        // record.getField('insurance_purchase_n').setRequired(true);
                        // } //应要求 放开校验
                    }
                    if (ds.fields.purchase_tax_flag) {
                        if (record.get('purchase_tax_flag') == 'N') {
                            record.getField('purchase_tax').setReadOnly(true);
                            record.getField('purchase_tax').setRequired(false);
                        } else {
                            record.getField('purchase_tax').setReadOnly(false);
                            record.getField('purchase_tax').setRequired(true);
                        }
                    }
                    var discount_method = record.get('discount_method');
                    /* if(discount_method = 'NO_DISCOUNT'||!discount_method){
                     record.getField('discount_limit_flag_n').setReadOnly(true);
                     }else if(discount_method = 'DISCOUNT'){
                     record.getField('discount_limit_flag_n').setReadOnly(false);
                     } */
                }
            };
            
            function down_payment_validate(record, name, value) {
                var down_payment_ratio_from = record.get('down_payment_ratio_from') || 0;
                var down_payment_ratio_to = record.get('down_payment_ratio_to') || 1;
                var invoice_price = record.get('invoice_price') || 0;
                var insurance_amount = record.get('insurance_amount') || 0;
                var purchase_tax = record.get('purchase_tax') || 0;
                var plate_price = record.get('plate_price') || 0;
                var down_payment_ratio = parseInt(value) / (parseInt(invoice_price) + parseInt(insurance_amount) + parseInt(purchase_tax) + parseInt(plate_price));
                if (down_payment_ratio < down_payment_ratio_from || down_payment_ratio > down_payment_ratio_to) {
                    Aurora.showMessage('提示', '首付比例只能在' + down_payment_ratio_from * 100 + '到' + down_payment_ratio_to * 100 + '之间！');
                    return '首付比例只能在' + down_payment_ratio_from * 100 + '到' + down_payment_ratio_to * 100 + '之间！';
                }
                return true;
            }
            
            function finance_amount_validate(record, name, value) {
                var finance_amount_from = record.get('finance_amount_from') || 0;
                var finance_amount_to = record.get('finance_amount_to') || 99999999999;
                if (value < finance_amount_from || value > finance_amount_to) {
                    Aurora.showMessage('提示', '融资额超出范围，请重新选择融资方案！');
                    return '请填写' + finance_amount_from + '到' + finance_amount_to + '之间的数字';
                }
                return true;
            }
            
            function invoice_price_validate(record, name, value) {
                var guide_price = record.get('guide_price') || 9999999999;
                if (value > guide_price) {
                    Aurora.showMessage('提示', '购置价不能大于指导价！');
                    return '购置价不能大于指导价';
                }
                return true;
            }
            
            function guide_price_validate(record, name, value) {
                var invoice_price = record.get('invoice_price') || 0;
                if (invoice_price > value) {
                    Aurora.showMessage('提示', '购置价不能大于指导价！');
                    return '购置价不能大于指导价';
                }
                return true;
            }
            
            //加载时调用(grid,table,gridBox)
            window['${/parameter/@bp_seq}${/parameter/@layout_code}_on_layout_dynamic_grid_load'] = function(ds, record, config_records, bp_seq) {
                //如果存在的话，进行校验逻辑  排除掉联系人校验
                if ((ds.id).indexOf('prj_project_bp') != -1 && (ds.id).indexOf('GUR_NP') != -1 && (ds.id).indexOf('prj_project_bp_contact_info') == -1) {
                    //担保人身份证校验
                    if (ds.fields.id_card_no) {
                        ds.fields.id_card_no.pro.validator = gur_id_card_no_validate;
                    }
                    //担保人手机验证
                    if (ds.fields.cell_phone) {
                        ds.fields.cell_phone.pro.validator = gur_cell_phone_validate;
                    }
                }
                // if ((ds.id).indexOf('prj_project_bp') != -1 && (ds.id).indexOf('GUR_ORG') != -1 && (ds.id).indexOf('prj_project_bp_contact_info') == -1) {
                // ds.fields.id_card_no.pro.validator = prj500n_card_id_check;
                // if (ds.fields.id_no_sp) {
                // ds.fields.id_no_sp.pro.validator = prj500n_card_id_check;
                // }
                // }
            };
            //新增时调用(grid,table,gridBox)
            window['${/parameter/@bp_seq}${/parameter/@layout_code}_on_layout_dynamic_grid_add'] = function(ds, record, config_records, bp_seq) {
			  Aurora.request({
                    url: '${/request/@context_path}/autocrud/prj.PRJ500D.sys_date/query',
                    para: {},
                    success: function(res) {
                        var sysdate = res.result.record.sys_date;
                        record.set('return_time', sysdate);
                    },
                    error: function() {
            
                       },
                    failure: function() {
            
                       },
                    scope: this
                });
                //如果存在的话，进行校验逻辑  排除掉联系人校验
                if ((ds.id).indexOf('prj_project_bp') != -1 && (ds.id).indexOf('GUR_NP') != -1 && (ds.id).indexOf('prj_project_bp_contact_info') == -1) {
                    //担保人身份证校验
                    if (ds.fields.id_card_no) {
                        ds.fields.id_card_no.pro.validator = gur_id_card_no_validate;
                    }
                    //担保人手机验证
                    if (ds.fields.cell_phone) {
                        ds.fields.cell_phone.pro.validator = gur_cell_phone_validate;
                    }
                }
                // if ((ds.id).indexOf('prj_project_bp') != -1 && (ds.id).indexOf('GUR_ORG') != -1 && (ds.id).indexOf('prj_project_bp_contact_info') == -1) {
                // ds.fields.id_card_no.pro.validator = prj500n_card_id_check;
                // if (ds.fields.id_no_sp) {
                // ds.fields.id_no_sp.pro.validator = prj500n_card_id_check;
                // }
                // }
            };
            //更新时调用
            window['${/parameter/@bp_seq}${/parameter/@layout_code}_on_layout_dynamic_update'] = function(ds, record, name, value, old_value, bp_seq) {
                var bp_info_ds_id = get_dsid_by_basetable(window['${/parameter/@layout_code}_layoutDataSetList'], 'prj_project_bp');
                var lease_item_info_ds_id = get_dsid_by_basetable(window['${/parameter/@layout_code}_layoutDataSetList'], 'prj_project_lease_item');
                var prj_project_ds_id = get_dsid_by_basetable(window['${/parameter/@layout_code}_layoutDataSetList'], 'prj_project');
                var bp_sp_np_ds_id = get_dsid_by_tabcode_basetable(window['${/parameter/@layout_code}_layoutDataSetList'], 'BP_SP_INFO', 'prj_project_bp');
                var bp_gur_np_ds_id = get_dsid_by_tabcode_basetable(window['${/parameter/@layout_code}_layoutDataSetList'], 'BP_GUR_NP', 'prj_project_bp');
                var bp_np_ds_id = get_dsid_by_tabcode_basetable(window['${/parameter/@layout_code}_layoutDataSetList'], 'BP_INFO', 'prj_project_bp');
                var prj_record = $(prj_project_ds_id).getAt(0);
            
            
                if (ds.id == bp_gur_np_ds_id) {
                    if (name == 'marital_status') {
                        if (value != 'MNC') {
                            record.getField('bp_name_sp').setReadOnly(true);
                            record.getField('id_no_sp').setReadOnly(true);
                            record.getField('date_of_birth_sp').setReadOnly(true);
                            record.getField('cell_phone_sp').setReadOnly(true);
                            record.set('bp_name_sp', '');
                            record.set('id_no_sp', '');
                            record.set('cell_phone_sp', '');
                            record.set('date_of_birth_sp', '');
                        } else {
                            record.getField('bp_name_sp').setReadOnly(false);
                            record.getField('id_no_sp').setReadOnly(false);
                            record.getField('date_of_birth_sp').setReadOnly(false);
                            record.getField('cell_phone_sp').setReadOnly(false);
                        }
                    }
                    if (name == 'address_type') {
                        if ($(bp_gur_np_ds_id).getAt(0).get('address_type') == '10') { //身份证
                            record.set('send_province', record.get('add_province'));
                            record.set('send_province_n', record.get('add_province_n'));
                            record.set('send_city', record.get('add_city'));
                            record.set('send_city_n', record.get('add_city_n'));
                            record.set('send_district', record.get('resident_district'));
                            record.set('send_district_n', record.get('resident_district_n'));
                            record.set('send_zip', record.get('zip_on_resident_booklit'));
                            record.set('send_address', record.get('resident_addres'));
                        } else if ($(bp_gur_np_ds_id).getAt(0).get('address_type') == '30') { //居住地址
                            record.set('send_province', record.get('liv_province'));
                            record.set('send_province_n', record.get('liv_province_n'));
                            record.set('send_city', record.get('liv_city'));
                            record.set('send_city_n', record.get('liv_city_n'));
                            record.set('send_district', record.get('liv_district'));
                            record.set('send_district_n', record.get('liv_district_n'));
                            record.set('send_zip', record.get('zip_of_living_address'));
                            record.set('send_address', record.get('living_address'));
                        } else if ($(bp_gur_np_ds_id).getAt(0).get('address_type') == '20') { //工作地址
                            record.set('send_province', record.get('work_province'));
                            record.set('send_province_n', record.get('work_province_n'));
                            record.set('send_city', record.get('work_city'));
                            record.set('send_city_n', record.get('work_city_n'));
                            record.set('send_district', record.get('work_district'));
                            record.set('send_district_n', record.get('work_district_n'));
                            record.set('send_zip', record.get('work_unit_zip'));
                            record.set('send_address', record.get('work_unit_address'));
                        }
                     }
                }
            
                if (ds.id == prj_project_ds_id) {
                    if (name == 'driver_license_flag') {
                        if (value == 'Y') {
                            record.set('driver_license_province', '');
                            record.set('driver_license_province_n', '');
                            record.getField('driver_license_province').setReadOnly(true);
                            record.getField('driver_license_province_n').setReadOnly(true);
                            //record.getField('driver_license_no').setReadOnly(false);
                            record.getField('driver_license_validity_period').setReadOnly(false);
                            //record.getField('driver_license_no').setRequired(true);
                            record.getField('driver_license_validity_period').setRequired(true);
                            record.getField('driver_license_province').setRequired(false);
                            record.getField('driver_license_province_n').setRequired(false);
                        } else {
                            //record.set('driver_license_no', '');
                            record.set('driver_license_validity_period', '');
                            //record.getField('driver_license_no').setRequired(false);
                            record.getField('driver_license_validity_period').setRequired(false);
                            record.getField('driver_license_province').setReadOnly(false);
                            record.getField('driver_license_province_n').setReadOnly(false);
                            record.getField('driver_license_province').setRequired(true);
                            record.getField('driver_license_province_n').setRequired(true);
                            //record.getField('driver_license_no').setReadOnly(true);
                            record.getField('driver_license_validity_period').setReadOnly(true);
                        }
                    } else if (name == 'main_driver_of_car') {
                        var prj_np_sp_record = $(bp_info_ds_id).getAt(0);
                        var bp_np_ds_record = $(bp_np_ds_id).getAt(0);
                        if (value == 'TENANT_SEC') {
                            prj_np_sp_record.getField('card_type_sp').setRequired(true);
                            prj_np_sp_record.getField('card_type_sp_n').setRequired(true);
                            prj_np_sp_record.getField('id_no_sp').setReadOnly(false);
                            prj_np_sp_record.getField('id_no_sp').setRequired(true);
                            prj_np_sp_record.getField('bp_name_sp').setReadOnly(false);
                            prj_np_sp_record.getField('bp_name_sp').setRequired(true);
                            prj_np_sp_record.getField('work_unit_name_sp').setReadOnly(false);
                            prj_np_sp_record.getField('work_unit_name_sp').setRequired(true);
                            prj_np_sp_record.getField('cell_phone_sp').setReadOnly(false);
                            prj_np_sp_record.getField('cell_phone_sp').setRequired(true);
                            prj_np_sp_record.getField('academic_background_sp').setRequired(true);
                            prj_np_sp_record.getField('academic_background_sp_n').setRequired(true);
                            prj_np_sp_record.getField('employment_type_sp').setRequired(true);
                            prj_np_sp_record.getField('employment_type_sp_n').setRequired(true);
                            bp_np_ds_record.set('marital_status', 'MNC');
                            bp_np_ds_record.set('marital_status_n', '已婚');
                            bp_np_ds_record.getField('marital_status').setReadOnly(true);
                            bp_np_ds_record.getField('marital_status_n').setReadOnly(true);
                        } else {
                            prj_np_sp_record.getField('card_type_sp').setRequired(false);
                            prj_np_sp_record.getField('card_type_sp_n').setRequired(false);
                            prj_np_sp_record.getField('id_no_sp').setRequired(false);
                            prj_np_sp_record.getField('bp_name_sp').setRequired(false);
                            prj_np_sp_record.getField('work_unit_name_sp').setRequired(false);
                            prj_np_sp_record.getField('cell_phone_sp').setRequired(false);
                            prj_np_sp_record.getField('academic_background_sp').setRequired(false);
                            prj_np_sp_record.getField('academic_background_sp_n').setRequired(false);
                            prj_np_sp_record.getField('employment_type_sp').setRequired(false);
                            prj_np_sp_record.getField('employment_type_sp_n').setRequired(false);
                           //prj_np_sp_record.set('card_type_sp', '');
                            //prj_np_sp_record.set('card_type_sp_n', '');
                            //prj_np_sp_record.set('id_no_sp', '');
							 prj_np_sp_record.set('gender_sp', '');
                            //prj_np_sp_record.set('bp_name_sp', '');
                            //prj_np_sp_record.set('employment_type_sp', '');
                            //prj_np_sp_record.set('work_unit_name_sp', '');
                            //prj_np_sp_record.set('academic_background_sp', '');
                            //prj_np_sp_record.set('academic_background_sp_n', '');
                            //prj_np_sp_record.set('employment_type_sp', '');
                            //prj_np_sp_record.set('employment_type_sp_n', '');
                            bp_np_ds_record.set('marital_status', '');
                            bp_np_ds_record.set('marital_status_n', '');
                            bp_np_ds_record.getField('marital_status').setReadOnly(false);
                            bp_np_ds_record.getField('marital_status_n').setReadOnly(false);
                        }
                        if (value == 'GUARANTOR') {
                            Aurora.showMessage('提示', '请维护连带担保人信息并保存！');
                        }
                    }
                }
            
                if (bp_info_ds_id == ds.id) {
            
                    //选择邮寄地址
                    if (name == 'address_type') {
                        if ($(bp_info_ds_id).getAt(0).get('address_type') == '10') { //身份证
                            record.set('send_province', record.get('add_province'));
                            record.set('send_province_n', record.get('add_province_n'));
                            record.set('send_city', record.get('add_city'));
                            record.set('send_city_n', record.get('add_city_n'));
                            record.set('send_district', record.get('resident_district'));
                            record.set('send_district_n', record.get('resident_district_n'));
                            record.set('send_zip', record.get('zip_on_resident_booklit'));
                            record.set('send_address', record.get('resident_addres'));
                        } else if ($(bp_info_ds_id).getAt(0).get('address_type') == '30') { //居住地址
                            record.set('send_province', record.get('liv_province'));
                            record.set('send_province_n', record.get('liv_province_n'));
                            record.set('send_city', record.get('liv_city'));
                            record.set('send_city_n', record.get('liv_city_n'));
                            record.set('send_district', record.get('liv_district'));
                            record.set('send_district_n', record.get('liv_district_n'));
                            record.set('send_zip', record.get('zip_of_living_address'));
                            record.set('send_address', record.get('living_address'));
                        } else if ($(bp_info_ds_id).getAt(0).get('address_type') == '20') { //工作地址
                            record.set('send_province', record.get('work_province'));
                            record.set('send_province_n', record.get('work_province_n'));
                            record.set('send_city', record.get('work_city'));
                            record.set('send_city_n', record.get('work_city_n'));
                            record.set('send_district', record.get('work_district'));
                            record.set('send_district_n', record.get('work_district_n'));
                            record.set('send_zip', record.get('work_unit_zip'));
                            record.set('send_address', record.get('work_unit_address'));
                        }
                    }
            
                    if (name == 'work_type') {
                        $(lease_item_info_ds_id).getAt(0).getField('product_plan_id_n').setLovPara('work_type', record.get('work_type'));
                    }
            
                    if (name == 'bp_name') {
                        if (old_value != value) {
                            bp_name_old = old_value;
                        }
                    }
                    if (name == 'id_card_no') {
                        if (old_value != value) {
                            id_card_no_old = old_value;
                        }
                    }
                    // if (name == 'marital_status') {
                    // if (value == 'UM' || value == 'DV' || value == 'RM') {
                    // record.getField('id_no_sp').setRequired(false);
                    // record.getField('bp_name_sp').setRequired(false);
                    // record.getField('cell_phone_sp').setRequired(false);
                    // record.set('bp_name_sp', '');
                    // record.set('id_no_sp', '');
                    // record.set('cell_phone_sp', '');
                    // record.set('work_unit_name_sp', '');
                    // record.set('work_type_sp', '');
                    // record.set('work_type_sp_n', '');
                    // record.set('age_sp', '');
                    // record.set('date_of_birth_sp', '');
                    // record.set('gender_sp_n', '');
                    // record.getField('bp_name_sp').setReadOnly(true);
                    // record.getField('id_no_sp').setReadOnly(true);
                    // record.getField('cell_phone_sp').setReadOnly(true);
                    // record.getField('work_unit_name_sp').setReadOnly(true);
                    // record.getField('work_type_sp_n').setReadOnly(true);
                    // } else if (value == 'MNC' || value == 'MWC' || Ext.isEmpty(value)) {
                    // record.getField('bp_name_sp').setReadOnly(false);
                    // record.getField('id_no_sp').setReadOnly(false);
                    // record.getField('cell_phone_sp').setReadOnly(false);
                    // record.getField('work_unit_name_sp').setReadOnly(false);
                    // record.getField('work_type_sp_n').setReadOnly(false);
                    // record.getField('id_no_sp').setRequired(true);
                    // record.getField('bp_name_sp').setRequired(true);
                    // record.getField('cell_phone_sp').setRequired(true);
                    // }
                    // } else
                    if (name == 'ownship_of_vehicle_flag') {
                        if (value == '01') {
                            record.getField('plate_no').setReadOnly(false);
                            record.getField('buy_time').setReadOnly(false);
                            record.getField('car_type').setReadOnly(false);
                            record.getField('car_type_n').setReadOnly(false);
                            record.getField('current_driver_of_car').setReadOnly(false);
                            record.getField('plate_no').setRequired(true);
                            record.getField('buy_time').setRequired(true);
                            record.getField('car_type').setRequired(true);
                            record.getField('car_type_n').setRequired(true);
                            record.getField('current_driver_of_car').setRequired(true);
                        } else {
                            record.set('plate_no', '');
                            record.set('buy_time', '');
                            record.set('car_type', '');
                            record.set('car_type_n', '');
                            record.set('current_driver_of_car', '');
                            record.getField('plate_no').setRequired(false);
                            record.getField('buy_time').setRequired(false);
                            record.getField('car_type').setRequired(false);
                            record.getField('car_type_n').setRequired(false);
                            record.getField('current_driver_of_car').setRequired(false);
                            record.getField('plate_no').setReadOnly(true);
                            record.getField('buy_time').setReadOnly(true);
                            record.getField('car_type').setReadOnly(true);
                            record.getField('car_type_n').setReadOnly(true);
                            record.getField('current_driver_of_car').setReadOnly(true);
                        }
                    } 
					 else if (name == 'social_security_flag') {
                     if (value == '01') {
                     record.getField('latest_payment_base').setReadOnly(false);
                     record.getField('latest_payment_base').setRequired(true);
                     } else {
                     record.set('latest_payment_base', '');
                     record.getField('latest_payment_base').setRequired(false);
                     record.getField('latest_payment_base').setReadOnly(true);
                     }
                     }
                }
                if (lease_item_info_ds_id == ds.id) {
            
                    if (name == 'product_plan_id') {
                        var down_payment_ratio = record.get('down_payment_ratio');
                        var finance_amount = record.get('finance_amount');
                        var product_plan_id = record.get('product_plan_id');
                        var project_id = $(prj_project_ds_id).getAt(0).get('project_id');
                        record.set('down_payment', '');
                        record.set('discount', '');
                        record.set('finance_amount', '');
                        if (down_payment_ratio) {
                            record.set('down_payment_ratio', down_payment_ratio);
                        }
                    } else if (name == 'discount_method') {
                        /* if(value == 'NO_DISCOUNT'){
                         record.set('discount_limit_flag','');
                         record.set('discount_limit_flag_n','');
                         record.getField('discount_limit_flag_n').setReadOnly(true);
                         }else if(value == 'DISCOUNT'){
                         record.getField('discount_limit_flag_n').setReadOnly(false);
                         } */
                    }
                    if (name == 'series_id_n') {
                        record.getField('product_plan_id_n').setLovPara('series_id', record.get('series_id'));
                        record.set('model_id', '');
                        record.set('model_id_n', '');
                        record.set('product_plan_id', '');
                        record.set('product_plan_id_n', '');
                    }
                    if (name == 'discount_method_n') {
                        record.getField('product_plan_id_n').setLovPara('discount_method', record.get('discount_method'));
                    }
                    if (name == 'discount_method') {
                        record.getField('product_plan_id_n').setLovPara('discount_method', record.get('discount_method'));
                    }
                    if (name == 'times') {
                        record.getField('product_plan_id_n').setLovPara('times', record.get('times'));
                    }
                    if (name == 'lease_times') {
                        var product_plan_id = record.get('product_plan_id');
                        var finance_amount = record.get('finance_amount');
                        var down_payment_ratio = record.get('down_payment_ratio');
                        var lease_times_temp = record.get('lease_times_temp');
                        var lease_times = record.get('lease_times');
                        if (!lease_times_temp) {
                            record.getField('lease_times').setReadOnly(false);
                        } else {
                            record.getField('lease_times').setReadOnly(true);
                        }
                        if (!(Ext.isEmpty(product_plan_id) || Ext.isEmpty(finance_amount) || Ext.isEmpty(down_payment_ratio) || Ext.isEmpty(lease_times))) {
                            Aurora.request({
                                url: $('check_gps_visit_link').getUrl(),
                                para: {
                                    product_plan_id: product_plan_id,
                                    finance_amount: finance_amount,
                                    down_payment_ratio: down_payment_ratio,
                                    lease_times: lease_times
                                },
                                success: function(res) {
                                    var result = res.result.result;
                                    if (result == 'BOTH') {
                                        record.set('gps_install_flag', 'N');
                                        record.set('gps_install_flag_n', '否');
                                        record.set('visit_flag', 'N');
                                        record.set('visit_flag_n', '否');
                                    } else if (result == 'GPS') {
                                        record.set('gps_install_flag', 'N');
                                        record.set('gps_install_flag_n', '否');
                                        record.set('visit_flag', 'Y');
                                        record.set('visit_flag_n', '是');
                                    } else if (result == 'VISIT') {
                                        record.set('gps_install_flag', 'N');
                                        record.set('gps_install_flag_n', '否');
                                        record.set('visit_flag', 'N');
                                        record.set('visit_flag_n', '否');
                                    } else if (result == 'NOT') {
                                        record.set('gps_install_flag', 'N');
                                        record.set('gps_install_flag_n', '否');
                                        record.set('visit_flag', 'Y');
                                        record.set('visit_flag_n', '是');
                                    }
                                    window['${/parameter/@layout_code}_unlock_layout_dynamic_window']();
                                },
                                error: function() {
                                    window['${/parameter/@layout_code}_unlock_layout_dynamic_window']();
                                },
                                failure: function() {
                                    window['${/parameter/@layout_code}_unlock_layout_dynamic_window']();
                                },
                                sync: true,
                                scope: this
                            });
                        }
                    }
                    if (name == 'down_payment_ratio') {
                        var product_plan_id = record.get('product_plan_id');
                        var finance_amount = record.get('finance_amount');
                        var down_payment_ratio = record.get('down_payment_ratio');
                        var lease_times = record.get('lease_times');
                        if (!(Ext.isEmpty(product_plan_id) || Ext.isEmpty(finance_amount) || Ext.isEmpty(down_payment_ratio) || Ext.isEmpty(lease_times))) {
                            Aurora.request({
                                url: $('check_gps_visit_link').getUrl(),
                                para: {
                                    product_plan_id: product_plan_id,
                                    finance_amount: finance_amount,
                                    down_payment_ratio: down_payment_ratio,
                                    lease_times: lease_times
                                },
                                success: function(res) {
                                    var result = res.result.result;
                                    if (result == 'BOTH') {
                                        record.set('gps_install_flag', 'N');
                                        record.set('gps_install_flag_n', '否');
                                        record.set('visit_flag', 'N');
                                        record.set('visit_flag_n', '否');
                                    } else if (result == 'GPS') {
                                        record.set('gps_install_flag', 'N');
                                        record.set('gps_install_flag_n', '否');
                                        record.set('visit_flag', 'Y');
                                        record.set('visit_flag_n', '是');
                                    } else if (result == 'VISIT') {
                                        record.set('gps_install_flag', 'N');
                                        record.set('gps_install_flag_n', '否');
                                        record.set('visit_flag', 'N');
                                        record.set('visit_flag_n', '否');
                                    } else if (result == 'NOT') {
                                        record.set('gps_install_flag', 'N');
                                        record.set('gps_install_flag_n', '否');
                                        record.set('visit_flag', 'Y');
                                        record.set('visit_flag_n', '是');
                                    }
                                    window['${/parameter/@layout_code}_unlock_layout_dynamic_window']();
                                },
                                error: function() {
                                    window['${/parameter/@layout_code}_unlock_layout_dynamic_window']();
                                },
                                failure: function() {
                                    window['${/parameter/@layout_code}_unlock_layout_dynamic_window']();
                                },
                                sync: true,
                                scope: this
                            });
                        }
                    }
                    if (name == 'deposit_ratio') {
                        if (value != 0) {
                            record.getField('deposit_deduction_n').setReadOnly(false);
                            record.set('deposit_deduction_n', '最后几期租金');
                            record.set('deposit_deduction', 'K');
                        } else {
                            record.getField('deposit_deduction_n').setReadOnly(true);
                            record.set('deposit_deduction_n', '');
                            record.set('deposit_deduction', '');
                        }
                        var finance_amount = record.get('finance_amount') || 0;
                        var deposit = parseInt(finance_amount) * parseFloat(value);
                        record.set('deposit', deposit);
                    }
                    if (name == 'down_payment') {
                        var invoice_price = record.get('invoice_price') || 0;
                        var insurance_amount = record.get('insurance_amount') || 0;
                        var purchase_tax = record.get('purchase_tax') || 0;
                        var plate_price = record.get('plate_price') || 0;
                        var down_payment_ratio = parseInt(value) / (parseInt(invoice_price) + parseInt(insurance_amount) + parseInt(purchase_tax) + parseInt(plate_price));
                        var finance_amount = parseInt(invoice_price) + parseInt(insurance_amount) + parseInt(purchase_tax) + parseInt(plate_price) - parseInt(value);
                        record.set('finance_amount', finance_amount);
                        record.set('down_payment_ratio', down_payment_ratio);
                    }
                    if (name == 'invoice_price') {
                        var down_payment = record.get('down_payment') || 0;
                        var insurance_amount = record.get('insurance_amount') || 0;
                        var purchase_tax = record.get('purchase_tax') || 0;
                        var plate_price = record.get('plate_price') || 0;
                        var balloon_ratio = record.get('balloon_ratio') || 0;
                        var balloon = parseFloat(balloon_ratio) * (parseInt(value) + parseInt(insurance_amount) + parseInt(purchase_tax) + parseInt(plate_price));
                        record.set('balloon', balloon);
                        if (down_payment) {
                            var finance_amount = parseInt(value) + parseInt(insurance_amount) + parseInt(purchase_tax) + parseInt(plate_price) - parseInt(down_payment);
                            record.set('finance_amount', finance_amount);
                            var down_payment_ratio = parseInt(down_payment) / (parseInt(value) + parseInt(insurance_amount) + parseInt(purchase_tax) + parseInt(plate_price));
                            record.set('down_payment_ratio', down_payment_ratio);
                        }
                        // var invoice_price = record.get('invoice_price');
                        // var discount_limit_total = record.get('discount_limit_total') || 0;
                        // record.set('lease_item_amount', accSub(invoice_price, discount_limit_total));
                    }
                    if (name == 'finance_amount') {
                        var deposit_ratio = record.get('deposit_ratio') || 0;
                        var deposit = parseFloat(deposit_ratio) * parseInt(value);
                        var lease_charge_ratio = record.get('lease_charge_ratio') || 0;
                        var lease_charge = parseFloat(lease_charge_ratio) * parseInt(value);
                        record.set('deposit', deposit);
                        record.set('lease_charge', lease_charge);
                        var down_payment_ratio = parseInt(value) / (parseInt(invoice_price) + parseInt(insurance_amount) + parseInt(purchase_tax) + parseInt(plate_price));
                    }
                    if (name == 'balloon_ratio') {
                        var invoice_price = record.get('invoice_price') || 0;
                        var insurance_amount = record.get('insurance_amount') || 0;
                        var purchase_tax = record.get('purchase_tax') || 0;
                        var plate_price = record.get('plate_price') || 0;
                        var balloon = parseFloat(value) * (parseInt(invoice_price) + parseInt(insurance_amount) + parseInt(purchase_tax) + parseInt(plate_price));
                        record.set('balloon', balloon);
                    }
                    if (name == 'license_fee_flag') {
                        if (value == 'N') {
                            record.getField('plate_price').setReadOnly(true);
                            record.getField('plate_price').setRequired(false);
                            record.set('plate_price', '');
                        } else {
                            record.getField('plate_price').setReadOnly(false);
                            record.getField('plate_price').setRequired(true);
                        }
                    }
                    if (name == 'insurance_flag') {
                        if (value == 'N') {
                            record.getField('insurance_amount').setReadOnly(true);
                            record.getField('insurance_purchase_n').setReadOnly(true);
                            record.getField('insurance_amount').setRequired(false);
                            record.getField('insurance_purchase_n').setRequired(false);
                            record.set('insurance_purchase_n', '其他');
                            record.set('insurance_purchase', 'OTHER');
                            record.set('insurance_amount', '');
                        } else {
                            record.getField('insurance_amount').setReadOnly(false);
                            record.getField('insurance_purchase_n').setReadOnly(false);
                            record.getField('insurance_amount').setRequired(true);
                            record.getField('insurance_purchase_n').setRequired(true);
                        }
                    }
                    if (name == 'purchase_tax_flag') {
                        if (value == 'N') {
                            record.getField('purchase_tax').setReadOnly(true);
                            record.getField('purchase_tax').setRequired(false);
                            record.set('purchase_tax', '');
                        } else {
                            record.getField('purchase_tax').setReadOnly(false);
                            record.getField('purchase_tax').setRequired(true);
                        }
                    }
                    if (name == 'plate_price') {
                        var invoice_price = record.get('invoice_price') || 0;
                        var insurance_amount = record.get('insurance_amount') || 0;
                        var purchase_tax = record.get('purchase_tax') || 0;
                        var down_payment = record.get('down_payment') || 0;
                        var balloon_ratio = record.get('balloon_ratio') || 0;
                        var balloon = parseFloat(balloon_ratio) * (parseInt(invoice_price) + parseInt(insurance_amount) + parseInt(purchase_tax) + parseInt(value));
                        record.set('balloon', balloon);
                        var finance_amount = parseInt(invoice_price) + parseInt(insurance_amount) + parseInt(purchase_tax) + parseInt(value) - parseInt(down_payment);
                        var down_payment_ratio = parseInt(down_payment) / (parseInt(value) + parseInt(insurance_amount) + parseInt(purchase_tax) + parseInt(invoice_price));
                        record.set('finance_amount', finance_amount);
                        record.set('down_payment_ratio', down_payment_ratio);
                    }
                    if (name == 'purchase_tax') {
                        var invoice_price = record.get('invoice_price') || 0;
                        var insurance_amount = record.get('insurance_amount') || 0;
                        var plate_price = record.get('plate_price') || 0;
                        var down_payment = record.get('down_payment') || 0;
                        var balloon_ratio = record.get('balloon_ratio') || 0;
                        var balloon = parseFloat(balloon_ratio) * (parseInt(invoice_price) + parseInt(insurance_amount) + parseInt(value) + parseInt(plate_price));
                        record.set('balloon', balloon);
                        var finance_amount = parseInt(invoice_price) + parseInt(insurance_amount) + parseInt(plate_price) + parseInt(value) - parseInt(down_payment);
                        var down_payment_ratio = parseInt(down_payment) / (parseInt(value) + parseInt(insurance_amount) + parseInt(plate_price) + parseInt(invoice_price));
                        record.set('finance_amount', finance_amount);
                        record.set('down_payment_ratio', down_payment_ratio);
                    }
                    if (name == 'insurance_amount') {
                        var invoice_price = record.get('invoice_price') || 0;
                        var plate_price = record.get('plate_price') || 0;
                        var purchase_tax = record.get('purchase_tax') || 0;
                        var down_payment = record.get('down_payment') || 0;
                        var balloon_ratio = record.get('balloon_ratio') || 0;
                        var balloon = parseFloat(balloon_ratio) * (parseInt(invoice_price) + parseInt(value) + parseInt(purchase_tax) + parseInt(plate_price));
                        record.set('balloon', balloon);
                        var finance_amount = parseInt(invoice_price) + parseInt(plate_price) + parseInt(purchase_tax) + parseInt(value) - parseInt(down_payment);
                        var down_payment_ratio = parseInt(down_payment) / (parseInt(value) + parseInt(plate_price) + parseInt(purchase_tax) + parseInt(invoice_price));
                        record.set('finance_amount', finance_amount);
                        record.set('down_payment_ratio', down_payment_ratio);
                    } else if (name == 'lease_charge_ratio') {
                        var finance_amount = record.get('finance_amount') || 0;
                        var lease_charge = parseFloat(value) * parseInt(finance_amount)
                        record.set('lease_charge', lease_charge);
                    }
                } /*如果是project_bp相关的，进行身份证校验处理*/
                if ((ds.id).indexOf('prj_project_bp') != -1 && (ds.id).indexOf('prj_project_bp_contact_info') == -1) {
                    var id_type = record.get('id_type');
                    if (name == 'id_card_no') {
                        Aurora.request({
                            url: $('get_id_card_no_info_id').getUrl(),
                            para: {
                                id_card_no: value,
                                id_type: id_type
                            },
                            success: function(data) {
                                if (data.result.record && !data.result.record.length) {
                                    //申请人信息
                                    for (var name in data.result.record) {
                                        if (name != 'bp_type' && name != 'bp_category') {
                                            record.set(name, data.result.record[name]);
                                        }
                                    }
                                    //prj_record.set('bp_code', data.result.record['bp_code']);
                                    //prj_record.set('bp_id_tenant', data.result.record['bp_id']);
                                } else {
                                    //prj_record.set('bp_code', '');
                                    //prj_record.set('bp_id_tenant', '');
                                }
            
            
                            },
                            failure: function() {
            
                               },
                            error: function() {
            
                               },
                            scope: this
                        });
                    } else if (name == 'business_license_num') {
                        Aurora.request({
                            url: $('get_organization_code_id').getUrl(),
                            para: {
                                business_license_num: value
                            },
                            success: function(data) {
                                if (data.result.record && !data.result.record.length) {
                                    //申请人信息
                                    for (var name in data.result.record) {
                                        if (name != 'bp_type' && name != 'bp_category') {
                                            record.set(name, data.result.record[name]);
                                        }
                                    }
                                    //prj_record.set('bp_code', data.result.record['bp_code']);
                                    //prj_record.set('bp_id_tenant', data.result.record['bp_id']);
                                } else {
                                    //prj_record.set('bp_code', '');
                                    //prj_record.set('bp_id_tenant', '');
                                }
            
            
                            },
                            failure: function() {
            
                               },
                            error: function() {
            
                               },
                            scope: this
                        });
                    }
            
                }
            };
            
            
            function id_card_no_validate(record, name, value) {
                //获取担保人ds
                var bp_gur_np_ds_id = get_dsid_by_tabcode_basetable(window['${/parameter/@layout_code}_layoutDataSetList'], 'BP_GUR_NP', 'prj_project_bp');
                var id_type = record.get('id_type');
                if (id_type == 'ID_CARD') {
                    if (!value) {
                        return '身份证号不能为空';
                    } else {
                        if (!checkCard(value)) {
                            Aurora.showMessage('提示', '申请人信息中，请输入正确格式的身份证！');
                            return '请输入正确格式的身份证';
                        }
                    }
                    if (value.length == 18) {
                        record.set('date_of_birth', new Date(value.substr(6, 4) + '/' + value.substr(10, 2) + '/' + value.substr(12, 2)));
                        record.set('age', new Date().getFullYear() - value.substr(6, 4));
                        if (value.substr(16, 1) % 2 == 1) {
                            record.set('gender', 'MALE');
                            record.set('gender_n', '男');
                        } else if (value.substr(16, 1) % 2 == 0) {
                            record.set('gender', 'FEMALE');
                            record.set('gender_n', '女');
                        }
                        if (record.get('gender') == record.get('gender_sp')) {
                            // Aurora.showMessage('提示', '申请人和申请人配偶的性别不能相同！');
                            // record.set('gender_sp_n', '');
                            // record.set('date_of_birth_sp', '');
                            // record.set('age_sp', '');
                            // record.set('id_no_sp', '');
                            return '申请人和申请人配偶的性别不能相同';
                        }
                    }
                }
            
                if ($(bp_gur_np_ds_id).getAt(0)) {
                    if (record.get('id_card_no') == $(bp_gur_np_ds_id).getAt(0).get('id_card_no')) {
                        Aurora.showMessage('提示', '申请人和担保人的身份证不能相同！');
                        record.set('id_no_sp', '');
                        record.set('id_card_no', '');
                        record.set('gender_n', '');
                        record.set('date_of_birth', '');
                        record.set('age', '');
                        return '申请人和担保人的身份证不能相同';
                    }
                }
                return true;
            }
            
            function id_card_no_leg_validate(record, name, value) {
                if (!checkCard(value)) {
                    Aurora.showMessage('提示', '请输入正确格式的身份证！');
                    return '请输入正确格式的身份证';
                }
                if (value) {
                    if (value.length == 18) {
                        record.set('date_of_birth_leg', new Date(value.substr(6, 4) + '/' + value.substr(10, 2) + '/' + value.substr(12, 2)));
                        record.set('age_leg', new Date().getFullYear() - value.substr(6, 4));
                        if (value.substr(16, 1) % 2 == 1) {
                            record.set('gender_leg', 'MALE');
                            record.set('gender_leg_n', '男');
                        } else if (value.substr(16, 1) % 2 == 0) {
                            record.set('gender_leg', 'FEMALE');
                            record.set('gender_leg_n', '女');
                        }
                    }
                }
                return true;
            }
            
            function cell_phone_validate(record, name, value) {
                //获取担保人ds
                var bp_gur_np_ds_id = get_dsid_by_tabcode_basetable(window['${/parameter/@layout_code}_layoutDataSetList'], 'BP_GUR_NP', 'prj_project_bp');
                var bp_contact_id = get_dsid_by_basetable(window['${/parameter/@layout_code}_layoutDataSetList'], 'prj_project_bp_contact_info');
                
				if (!checkMobile(value)) {
                    Aurora.showMessage('提示', '申请人信息中，请输入正确格式的手机号码！');
                    return '请输入正确格式的手机号码';
                }
                if (record.get('cell_phone') == record.get('cell_phone_sp')) {
                    Aurora.showMessage('提示', '申请人和申请人配偶的手机号不能相同！');
                    return '申请人和申请人配偶的手机号不能相同';
                }
                if (!Ext.isEmpty($(bp_gur_np_ds_id).getAt(0))) {
                    if (record.get('cell_phone') == ($(bp_gur_np_ds_id).getAt(0).get('cell_phone') || 0)) {
                        Aurora.showMessage('提示', '申请人和担保人的手机号不能相同！');
                        return '申请人和担保人的手机号不能相同';
                    }
                }
                if (!Ext.isEmpty($(bp_contact_id).getAt(0))) {
                    if (record.get('cell_phone') == $(bp_contact_id).getAt(0).get('phone') || record.get('cell_phone') == $(bp_contact_id).getAt(0).get('phone_2') || record.get('cell_phone') == $(bp_contact_id).getAt(0).get('phone_3')) {
                        Aurora.showMessage('提示', '联系人和申请人的手机号不能一样！');
                        return '联系人和申请人的手机号不能一样';
                    }
                }
                return true;
            }
            
            function cell_phone_leg_validate(record, name, value) {
                if (!checkMobile(value)) {
                    Aurora.showMessage('提示', '请输入正确格式的手机号码！');
                    return '请输入正确格式的手机号码';
                }
                return true;
            }
            
            function id_no_sp_validate(record, name, value) {
                var card_type_sp = record.get('card_type_sp');
                if (card_type_sp == 'ID_CARD') {
                    if (!value) {
                        return true;
                    } else {
                        if (!checkCard(value)) {
                            Aurora.showMessage('提示', '申请人配偶信息中，请输入正确格式的身份证！');
                            return '请输入正确格式的身份证';
                        }
                        if (value.length == 18) {
                            record.set('date_of_birth_sp', new Date(value.substr(6, 4) + '/' + value.substr(10, 2) + '/' + value.substr(12, 2)));
                            record.set('age_sp', new Date().getFullYear() - value.substr(6, 4));
                            if (value.substr(16, 1) % 2 == 1) {
                                record.set('gender_sp', 'MALE');
                                record.set('gender_sp_n', '男');
                            } else if (value.substr(16, 1) % 2 == 0) {
                                record.set('gender_sp', 'FEMALE');
                                record.set('gender_sp_n', '女');
                            }
                            if (record.get('gender') == record.get('gender_sp')) {
                                Aurora.showMessage('提示', '申请人和申请人配偶的性别不能相同！');
                                record.set('gender_sp', '');
								record.set('gender_sp_n', '');
                                record.set('date_of_birth_sp', '');
                                record.set('age_sp', '');
                                record.set('id_no_sp', '');
                                return '申请人和申请人配偶的性别不能相同';
                            }
                        }
                    }
                }
                return true;
            }
            
            function cell_phone_sp_validate(record, name, value) {
                if (!value) {
                    return true;
                }
                if (!checkMobile(value)) {
                    Aurora.showMessage('提示', '申请人配偶信息中，请输入正确格式的手机号码！');
                    return '请输入正确格式的手机号码';
                }
                if (record.get('cell_phone') == record.get('cell_phone_sp')) {
                    Aurora.showMessage('提示', '申请人和申请人配偶的手机号不能相同！');
                    return '申请人和申请人配偶的手机号不能相同';
                }
                return true;
            }
            
            function gur_id_card_no_validate(record, name, value) {
                var ds_id = get_dsid_by_basetable(window['${/parameter/@layout_code}_layoutDataSetList'], 'prj_project_bp');
            
                if (!value) {
                    return '身份证号不能为空';
                } else {
                    if (!checkCard(value)) {
                        Aurora.showMessage('提示', '担保人信息中，请输入正确格式的身份证！');
                        return '请输入正确格式的身份证';
                    }
                    if (value.length == 18) {
                        record.set('date_of_birth', new Date(value.substr(6, 4) + '/' + value.substr(10, 2) + '/' + value.substr(12, 2)));
                        record.set('age', new Date().getFullYear() - value.substr(6, 4));
                        if (value.substr(16, 1) % 2 == 1) {
                            record.set('gender', 'MALE');
                            record.set('gender_n', '男');
                        } else if (value.substr(16, 1) % 2 == 0) {
                            record.set('gender', 'FEMALE');
                            record.set('gender_n', '女');
                        }
                    }
                }
            
                if (record.get('id_card_no') == $(ds_id).getAt(0).get('id_card_no')) {
                    Aurora.showMessage('提示', '申请人和担保人的身份证不能相同！');
                    record.set('gender_n', '');
                    record.set('date_of_birth', '');
                    record.set('age', '');
                    return '申请人和担保人的身份证不能相同';
                }
                return true;
            }
            
            function gur_cell_phone_validate(record, name, value) {
                //获取申请人ds
                var ds_id = get_dsid_by_basetable(window['${/parameter/@layout_code}_layoutDataSetList'], 'prj_project_bp');
                if (!checkMobile(value)) {
                    Aurora.showMessage('提示', '担保人信息中，请输入正确格式的手机号码！');
                    return '请输入正确格式的手机号码';
                }
                if (record.get('cell_phone') == $(ds_id).getAt(0).get('cell_phone')) {
                    record.set('cell_phone', '');
                    Aurora.showMessage('提示', '申请人和担保人的手机号不能相同！');
                    return '申请人和担保人的手机号不能相同';
                }
                return true;
            }
            
            function phone_validate(record, name, value) {
                var ds_id = get_dsid_by_basetable(window['${/parameter/@layout_code}_layoutDataSetList'], 'prj_project_bp');
                var phone_0 = $(ds_id).getAt(0).get('cell_phone')
                var phone_1 = record.get('phone_1') || -1;
                var phone_2 = record.get('phone_2') || -2;
                var phone_3 = record.get('phone_3') || -3;
                if (phone_1 != -1) {
                    if (!checkMobile(phone_1)) {
                        Aurora.showMessage('提示', '联系人1信息中，请输入正确格式的手机号码！');
                        return '请输入正确格式的手机号码';
                    }
                }
                if (phone_2 != -2) {
                    if (!checkMobile(phone_2)) {
                        Aurora.showMessage('提示', '联系人2信息中，请输入正确格式的手机号码！');
                        return '请输入正确格式的手机号码';
                    }
                }
                if (phone_3 != -3) {
                    if (!checkMobile(phone_3)) {
                        Aurora.showMessage('提示', '联系人3信息中，请输入正确格式的手机号码！');
                        return '请输入正确格式的手机号码';
                    }
                }
                if (phone_0 == phone_1 || phone_0 == phone_2 || phone_0 == phone_3) {
                    Aurora.showMessage('提示', '联系人和申请人的手机号不能一样！');
                    return '联系人和申请人的手机号不能一样';
                }
                if (phone_1 == phone_2 || phone_1 == phone_3 || phone_2 == phone_3) {
                    Aurora.showMessage('提示', '联系人的手机号不能一样！');
                    return '联系人的手机号不能一样';
                }
                return true;
            }
            
            function accSub(arg1, arg2) {
                var r1, r2, m, n;
                try {
                    r1 = arg1.toString().split(".")[1].length;
                } catch (e) {
                    r1 = 0;
                }
                try {
                    r2 = arg2.toString().split(".")[1].length;
                } catch (e) {
                    r2 = 0;
                }
                m = Math.pow(10, Math.max(r1, r2));
                n = (r1 >= r2) ? r1 : r2;
                return parseFloat(((arg1 * m - arg2 * m) / m).toFixed(n));
            }
        ]]></script>
        <a:screen-include screen="modules/cont/CON500/con_contract_get_layout_code.screen"/>
    </a:view>
</a:screen>
